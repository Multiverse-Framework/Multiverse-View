#usda 1.0
(
    defaultPrim = "Root"
    metersPerUnit = 0.009999999776482582
    upAxis = "Z"
)

def Xform "Root" (
    assetInfo = {
        asset identifier = @../../../../../../Users/giang/Documents/USD/Apartment.usda@
        string name = "Apartment"
        dictionary unreal = {
            string assetType = "World"
            string contentPath = "/Game/Maps/Apartment.Apartment"
            string engineVersion = "5.3.2-29314046+++UE5+Release-5.3"
            string exportTime = "2024.02.20-20.01.08"
        }
        string version = "FB995C101CD5DE3C936A70F89F8D58CFB84BCC63"
    }
)
{
    def "SM_Schreibtischstuhl_Oben2" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Schreibtischstuhl_Oben.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.17364752199146993, 0.9848078686252575, 0, 0), (-0.9848078686252575, 0.17364752199146993, 0, 0), (0, 0, 1, 0), (234.680419921875, -651.4136962890625, 55.32696533203125, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section4" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schreibtischstuhl_Oben2/Section4/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Fabric_Schlafsofa.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schreibtischstuhl_Oben2/Section4/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Fabric_Schlafsofa.M_Fabric_Schlafsofa@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schreibtischstuhl_Oben2/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Fabric_Grey_2.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schreibtischstuhl_Oben2/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Fabric_Grey_2.M_Fabric_Grey_2@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schreibtischstuhl_Oben2/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Fabric_YellowGreen_Mesh_2.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schreibtischstuhl_Oben2/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Fabric_YellowGreen_Mesh_2.M_Fabric_YellowGreen_Mesh_2@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_02_Door" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_02_Door.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000006391586616083522, -0.9999999999795741, 0, 0), (0.9999999999795741, 0.000006391586616083522, 0, 0), (0, 0, 1, 0), (887.3793334960938, -436.9763488769531, 109.08781433105469, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_02_Door/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Kitchen_Fronts.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_02_Door/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Kitchen_Fronts.M_Kitchen_Fronts@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_02_Door/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_02_Door/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lobby_Pillar_01" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Pillar_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-219.60899353027344, 390.5480041503906, 194.0019989013672, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lobby_Pillar_01/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Granite.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lobby_Pillar_01/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Granite.M_Granite@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lobby_Pillar_01/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lobby_Pillar_01/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Oven_Grid" (
        prepend references = @Assets/Game/Meshes/Oven/SM_Oven_Grid.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.0000037284255260949806, -0.9999999999930496, 0, 0), (0.9999999999930496, -0.0000037284255260949806, 0, 0), (0, 0, 1, 0), (912.1119995117188, -405.1079406738281, 91.89591979980469, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_02_Drawer_6" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_02_Drawer_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000006391586616083522, -0.9999999999795741, 0, 0), (0.9999999999795741, 0.000006391586616083522, 0, 0), (0, 0, 1, 0), (915.8632202148438, -454.8772277832031, 13.462738037109375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_035" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_035.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-150.90606689453125, -746.768798828125, 10.683456420898438, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Living_Wall_05" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Living_Wall_05.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-941.9439697265625, -141.38699340820312, 146.19500732421875, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Living_Wall_05/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Living_Wall_05/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Living_Wall_05/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Living_Wall_05/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }
    }

    def SphereLight "PointLight11"
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 6500
        bool inputs:enableColorTemperature = 0
        float inputs:exposure = 0
        float inputs:intensity = 61.89359
        float inputs:radius = 3
        bool treatAsPoint = 0
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000008763464462768766, 0.9999999999616018, 1.5700924586687032e-16, 0), (0.9999999999616018, 0.000008763464460881387, 6.879724731763504e-22, 0), (-6.879724731763504e-22, 1.5700924586687032e-16, -1.0000000000000018, 0), (7.79718017578125, -640.4930419921875, 279.477294921875, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_Island_Cover_01" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Island_Cover_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002130528872212878, 0.9999999999977306, 0, 0), (-0.9999999999977306, -0.000002130528872212878, 0, 0), (0, 0, 1, 0), (658.398193359375, -529.229736328125, 37.7747802734375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_015" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_015.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (305.81182861328125, -256.4632568359375, 22.082847595214844, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_040" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_040.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-342.42230224609375, -256.5118103027344, 22.184860229492188, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_040/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_040/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_040/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_040/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_040/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_040/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lamp_14" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-833.9197387695312, -643.9404296875, 282.2744140625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_14/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_14/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_14/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_14/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Ledersessel" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Ledersessel.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-63.36749267578125, -670.07470703125, 28.885826110839844, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Ledersessel/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Leather_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Ledersessel/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Leather_Black.M_Leather_Black@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Ledersessel/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Ledersessel/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Socket_034" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_034.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (123.05181884765625, -746.767578125, 10.683456420898438, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "Elderberry_LOD0_Var2_wfzobb2ia_2" (
        prepend references = @Assets/Game/Megascans/3D_Plants/Elderberry_wfzobb2ia/Elderberry_LOD0_Var2_wfzobb2ia_2.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1.8631500005722046, -0, 0, 0), (0, 1.8631500005722046, -0, 0), (0, 0, 1.8631500005722046, 0), (422.1208190917969, -1163.013427734375, -39.60601806640625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_Handle3" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9999999999721977, 0.000007456851052152761, 0, 0), (-0.000007456851052152761, 0.9999999999721977, 0, 0), (0, 0, 1, 0), (887.2877807617188, -405.1579895019531, 37.694000244140625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Nachttisch" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Nachttisch.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-613.0180053710938, -406.7467346191406, 15.733489990234375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kaffeemaschine_BohnenDeckel" (
        prepend references = @Assets/Game/Meshes/Kaffeemaschine/SM_Kaffeemaschine_BohnenDeckel.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.17364083409737363, -0.9848090478534245, 0, 0), (0.9848090478534245, -0.17364083409737363, 0, 0), (0, 0, 1, 0), (917.7085571289062, -584.2047729492188, 124.45361328125, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "Cube5" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Engine/BasicShapes/Cube.usda@
    )
    {
        rel material:binding = </Root/Cube5/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-1.7760499715663336, -0.000007094860767974271, 0, 0), (-1.7924405478738468e-8, 0.0044869999400913305, -0, 0), (0, 0, 2.8326780796051025, 0), (544.302734375, -771.3990478515625, 141.28619384765625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Glass.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/Cube5/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass.M_Glass@
                token outputs:out
            }
        }
    }

    def "SM_Fridge_Shelf2" (
        prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Shelf.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000006391586616083522, -0.9999999999795741, 0, 0), (0.9999999999795741, 0.000006391586616083522, 0, 0), (0, 0, 1, 0), (915.7033081054688, -505.3463439941406, 155.40670776367188, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Living_Wall_07" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Living_Wall_07.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (957.1329956054688, -136.88999938964844, 146.19500732421875, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Living_Wall_07/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Living_Wall_07/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Living_Wall_07/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Living_Wall_07/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lobby_Shadowbox" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Shadowbox.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-170.2969970703125, 614.4219970703125, 190.0330047607422, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_03_Fridge" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_03_Fridge.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.0000013315805451608043, -0.9999999999991136, 0, 0), (0.9999999999991136, -0.0000013315805451608043, 0, 0), (0, 0, 1, 0), (917.7247924804688, -505.2584533691406, 109.03091430664062, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_03_Fridge/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_03_Fridge/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_03_Fridge/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Rubber_Plastic.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_03_Fridge/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Rubber_Plastic.M_Rubber_Plastic@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_03_Fridge/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Kitchen_Fronts.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_03_Fridge/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Kitchen_Fronts.M_Kitchen_Fronts@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lift_Text_7_Competition" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Text_7_Competition.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-4.144139766693115, 859.5759887695312, 171.2169952392578, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_7_Competition/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_7_Competition/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_7_Competition/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_7_Competition/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def SphereLight "PointLight18"
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 6500
        bool inputs:enableColorTemperature = 0
        float inputs:exposure = 0
        float inputs:intensity = 61.89359
        float inputs:radius = 3
        bool treatAsPoint = 0
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000008763464462768766, 0.9999999999616018, 1.5700924586687032e-16, 0), (0.9999999999616018, 0.000008763464460881387, 6.879724731763504e-22, 0), (-6.879724731763504e-22, 1.5700924586687032e-16, -1.0000000000000018, 0), (-827.612060546875, -418.4809875488281, 279.477294921875, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Hexagon_Sign2" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Hexagon_Sign.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-229.56051635742188, -0.11059600114822388, 185.77162170410156, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Hexagon_Sign2/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Plastic_Darkblue.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Hexagon_Sign2/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Plastic_Darkblue.M_Plastic_Darkblue@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lamp_01" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (818.7120971679688, -419.6156311035156, 282.2744140625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_01/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_01/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_01/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_01/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Floor" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Floor.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-0.8048710227012634, -514.0958251953125, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Plant_Big_01" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Plant_Big_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1.4845139980316162, -0, 0, 0), (0, 1.4845139980316162, -0, 0), (0, 0, 1.4845139980316162, 0), (243.2215576171875, 75.13381958007812, 146.90744018554688, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Plant_Big_01/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Rust.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Plant_Big_01/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Rust.M_Metal_Rust@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Handle_Door_02" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Handle_Door_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.34202252074975714, -0.9396917554709, 0, 0), (0.9396917554709, -0.34202252074975714, 0, 0), (0, 0, 1, 0), (-342.933837890625, -344.608642578125, 96.37673950195312, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Schreibtisch_Unten" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Schreibtisch_Unten.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.6427839374995958, -0.7660475244346887, 0, 0), (0.7660475244346887, -0.6427839374995958, 0, 0), (0, 0, 1, 0), (285.05328369140625, -673.8046264648438, 12.419944763183594, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schreibtisch_Unten/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schreibtisch_Unten/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/White.White@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schreibtisch_Unten/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schreibtisch_Unten/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }
    }

    def "InsibleCube_for_Collision" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Engine/BasicShapes/Cube.usda@
    )
    {
        rel material:binding = </Root/InsibleCube_for_Collision/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (23.5, -0, 0, 0), (0, 29.25, -0, 0), (0, 0, 0.25, 0), (-191.22552490234375, -45.57684326171875, -13.191787719726562, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Engine/BasicShapes/BasicShapeMaterial.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/InsibleCube_for_Collision/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Engine/BasicShapes/BasicShapeMaterial.BasicShapeMaterial@
                token outputs:out
            }
        }
    }

    def "SM_Vents10" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-15.66448974609375, -257.826416015625, 251.28836059570312, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_06_Base_Drawer_02" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_06_Base_Drawer_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000004261057743981667, -0.9999999999909218, 0, 0), (0.9999999999909218, 0.000004261057743981667, 0, 0), (0, 0, 1, 0), (912.4489135742188, -615.7266845703125, 55.495208740234375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_10_Drawer_03" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_10_Drawer_03.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002130528872212878, 0.9999999999977306, 0, 0), (-0.9999999999977306, -0.000002130528872212878, 0, 0), (0, 0, 1, 0), (700.9638671875, -484.4245910644531, 22.458251953125, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "SM_Kitchen_Handle"
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000004261057743981667, -0.9999999999909218, 0, 0), (0.9999999999909218, 0.000004261057743981667, 0, 0), (0, 0, 1, 0), (907.4630737304688, -593.8248291015625, 141.80648803710938, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Plant_Big_2" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Plant_Big_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (867.3136596679688, -85.24750518798828, 101.44269561767578, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Heater_001" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Heater_001.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (404.708251953125, -744.1796875, 111.39414978027344, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Heater_001/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Heater_001/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def SphereLight "SpotLight7" (
        prepend apiSchemas = ["ShapingAPI"]
    )
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 4500
        bool inputs:enableColorTemperature = 1
        float inputs:exposure = 0
        float inputs:intensity = 80000
        float inputs:radius = 0
        float inputs:shaping:cone:angle = 50
        float inputs:shaping:cone:softness = 1
        bool treatAsPoint = 1
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-2.784541703881871e-7, -0.9848074524162159, 0.17364988242266977, 0), (0.9999999999999526, -2.5013202931134515e-7, 1.849830438965805e-7, 0), (-1.3873728289814924e-7, 0.1736498824227129, 0.9848074524162369, 0), (-386.08294677734375, 6.852015972137451, 228.15611267089844, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Ceiling" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Ceiling.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-0.8048710227012634, -514.0958251953125, 297.32745361328125, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Vents12" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (232.12237548828125, -257.82550048828125, 252.39938354492188, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Counter_Sink" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Counter_Sink.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002130528872212878, 0.9999999999977306, 0, 0), (-0.9999999999977306, -0.000002130528872212878, 0, 0), (0, 0, 1, 0), (698.835693359375, -594.7266845703125, 77.54640197753906, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_009" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_009.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-872.6014404296875, -256.99560546875, 22.20598602294922, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_009/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_009/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_009/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_009/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Ceiling_Panel_6" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Raum/SM_Ceiling_Panel_01.usda@
    )
    {
        rel material:binding = </Root/SM_Ceiling_Panel_6/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (541.818603515625, -532.6495361328125, 282.25640869140625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Ceiling_Panel_6/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                token outputs:out
            }
        }
    }

    def "SM_Kitchen_Handle13" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999812403, -0.0000061252705073353635, 0, 0), (0.0000061252705073353635, -0.9999999999812403, 0, 0), (0, 0, 1, 0), (725.9425659179688, -594.18408203125, 77.58291625976562, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Oven_Tray" (
        prepend references = @Assets/Game/Meshes/Oven/SM_Oven_Tray.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.0000037284255260949806, -0.9999999999930496, 0, 0), (0.9999999999930496, -0.0000037284255260949806, 0, 0), (0, 0, 1, 0), (913.9567260742188, -405.2065734863281, 99.13638305664062, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle11" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (276.35748291015625, -767.6610107421875, 262.2713623046875, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lobby_Window_01" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Window_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-528.9682006835938, 517.0170288085938, 166.28700256347656, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lobby_Window_01/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lobby_Window_01/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Handle_Door_3" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Handle_Door_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9396923703006035, -0.3420208315276037, 0, 0), (0.3420208315276037, 0.9396923703006035, 0, 0), (0, 0, 1, 0), (110.37686157226562, -289.63037109375, 94.63318634033203, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "Cube12" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Engine/BasicShapes/Cube.usda@
    )
    {
        rel material:binding = </Root/Cube12/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (2.0814011096954346, -0, 0, 0), (0, 0.025547999888658524, -0, 0), (0, 0, 1.8233489990234375, 0), (711.7387084960938, -254.01197814941406, 119.79235076904297, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Models/IAILab/IAIDoors/IAIDoorA/M_IAIDoorAGlass.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/Cube12/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Models/IAILab/IAIDoors/IAIDoorA/M_IAIDoorAGlass.M_IAIDoorAGlass@
                token outputs:out
            }
        }
    }

    def "SM_Kitchen_10_Drawer_02" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_10_Drawer_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002130528872212878, 0.9999999999977306, 0, 0), (-0.9999999999977306, -0.000002130528872212878, 0, 0), (0, 0, 1, 0), (700.9951171875, -484.4547424316406, 55.660186767578125, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Ceiling_Panel_2" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Raum/SM_Ceiling_Panel_01.usda@
    )
    {
        rel material:binding = </Root/SM_Ceiling_Panel_2/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-557.1106567382812, -532.6534423828125, 282.25640869140625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Ceiling_Panel_2/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                token outputs:out
            }
        }
    }

    def "SM_Bodenspot_03" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Bodenspot_03.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-164.11773681640625, -573.552734375, -6.92510986328125, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Bodenspot_03/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Bodenspot_03/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Bodenspot_03/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Floor_Wood.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Bodenspot_03/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Floor_Wood.M_Floor_Wood@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Bodenspot_03/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Bodenspot_03/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_Handle15" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999812403, -0.0000061252705073353635, 0, 0), (0.0000061252705073353635, -0.9999999999812403, 0, 0), (0, 0, 1, 0), (726.1334838867188, -534.0177001953125, 77.58291625976562, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_09_Drawer_02" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_09_Drawer_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002263686926573527, 0.999999999997438, 0, 0), (-0.999999999997438, -0.000002263686926573527, 0, 0), (0, 0, 1, 0), (701.010009765625, -534.472900390625, 55.64427185058594, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Vents8" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-204.57354736328125, -257.8271179199219, 251.28836059570312, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Fridge_Door_02" (
        prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Door_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999991132, -0.0000013315805450608307, 0, 0), (0.0000013315805450608307, -0.9999999999991132, 0, 0), (0, 0, 1, 0), (888.0023803710938, -475.3495178222656, 45.230133056640625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Fridge_Door_02/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Rubber_Plastic.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Fridge_Door_02/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Rubber_Plastic.M_Rubber_Plastic@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Esstischstuhl" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Esstischstuhl.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.8660223411329397, -0.5000053046304848, 0, 0), (0.5000053046304848, -0.8660223411329397, 0, 0), (0, 0, 1, 0), (213.41928100585938, -399.1322021484375, 34.112518310546875, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Esstischstuhl/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Fabric_Esstischstuhl.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Esstischstuhl/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Fabric_Esstischstuhl.M_Fabric_Esstischstuhl@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Esstischstuhl/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Esstisch.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Esstischstuhl/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Esstisch.M_Esstisch@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lift_Floor" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Floor.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-97.73860168457031, 822.4559936523438, 0.1497029960155487, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Floor/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Floor/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section3" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Floor/Section3/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/StarterContent/Materials/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Floor/Section3/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/StarterContent/Materials/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Floor/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Granite_02.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Floor/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Granite_02.M_Granite_02@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Retail_Door_Part3" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Retail_Door_Part2.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.34202252074975714, -0.9396917554709, 0, 0), (0.9396917554709, -0.34202252074975714, 0, 0), (0, 0, 1, 0), (-330.21612548828125, -304.0956115722656, 107.52748107910156, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle21" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-546.9238891601562, -767.2989501953125, 102.254150390625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lamp_5" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (265.46539306640625, -419.6173400878906, 282.2744140625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_5/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_5/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_5/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_5/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_02_Drawer_01" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_02_Drawer_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000006391586616083522, -0.9999999999795741, 0, 0), (0.9999999999795741, 0.000006391586616083522, 0, 0), (0, 0, 1, 0), (916.7677612304688, -454.8392639160156, 167.02822875976562, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lift_Text_6_Challenges" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Text_6_Challenges.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-4.144139766693115, 860.6929931640625, 164.48899841308594, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_6_Challenges/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_6_Challenges/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_6_Challenges/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_6_Challenges/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Dishwasher_Base" (
        prepend references = @Assets/Game/Meshes/Dishwasher/SM_Dishwasher_Base.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-2.663161091653876e-7, 0.9999999999999648, 0, 0), (-0.9999999999999648, -2.663161091653876e-7, 0, 0), (0, 0, 1, 0), (712.8046875, -653.6248779296875, 8.969467163085938, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Dishwasher_Base/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Dishwasher.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Dishwasher_Base/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Dishwasher.M_Metal_Dishwasher@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Window_02" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (541.981201171875, -769.543212890625, 144.88824462890625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_06_Base" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_06_Base.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000004261057743981667, -0.9999999999909218, 0, 0), (0.9999999999909218, 0.000004261057743981667, 0, 0), (0, 0, 1, 0), (917.7540893554688, -615.6527099609375, 42.19831848144531, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_033" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_033.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (398.657958984375, -746.7667236328125, 10.683456420898438, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Living_Wall_04" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Living_Wall_04.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (945.801025390625, -504.9630126953125, 145.76800537109375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Living_Wall_04/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Living_Wall_04/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lobby_Lamp_4" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (218.314697265625, -1.6708984375, 232.59066772460938, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Vents9" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-83.98419189453125, -257.82659912109375, 251.28836059570312, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Stehtisch" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Stehtisch.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (308.24835205078125, -319.54833984375, 45.271697998046875, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Stehtisch/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Stehtisch/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_White.M_Metal_White@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Stehtisch/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Stehtisch/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_White.M_Metal_White@
                    token outputs:out
                }
            }
        }

        over "Section3" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Stehtisch/Section3/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Stehtisch/Section3/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Stehtisch/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Stehtisch/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Socket_025" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_025.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (946.8307495117188, -469.3834533691406, 22.307464599609375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_025/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_025/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/White.White@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Ceiling_Panel_3" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Raum/SM_Ceiling_Panel_01.usda@
    )
    {
        rel material:binding = </Root/SM_Ceiling_Panel_3/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-282.76910400390625, -532.652587890625, 282.25640869140625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Ceiling_Panel_3/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                token outputs:out
            }
        }
    }

    def "SM_TV_LG" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_TV_LG.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9999999999636868, 0.000008522115488150407, 0, 0), (-0.000008522115488150407, 0.9999999999636868, 0, 0), (0, 0, 1, 0), (-424.02886962890625, -277.9551696777344, 141.25320434570312, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_TV_LG/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_TV_LG/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Wall_02" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Wall_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-938.08056640625, -505.4441223144531, 145.74026489257812, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Wall_02/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Wall_02/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Wall_02/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Wall_02/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Ceiling_Panel_7" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Raum/SM_Ceiling_Panel_01.usda@
    )
    {
        rel material:binding = </Root/SM_Ceiling_Panel_7/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (816.7199096679688, -532.6484375, 282.25640869140625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Ceiling_Panel_7/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                token outputs:out
            }
        }
    }

    def "SM_Esstisch" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Esstisch.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002130528872212878, 0.9999999999977306, 0, 0), (-0.9999999999977306, -0.000002130528872212878, 0, 0), (0, 0, 1, 0), (208.9829559326172, -341.83721923828125, 30.447235107421875, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Vents7" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-274.29595947265625, -257.8275146484375, 251.28836059570312, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Heater_004" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Heater_004.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-695.0599975585938, -744.18359375, 111.39414978027344, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Heater_004/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Heater_004/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Heater_004/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Heater_004/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_01_Shelf2" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_01_Shelf.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000006391586616083522, -0.9999999999795741, 0, 0), (0.9999999999795741, 0.000006391586616083522, 0, 0), (0, 0, 1, 0), (916.8461303710938, -404.8857727050781, 158.59078979492188, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_01_Shelf2/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_01_Shelf2/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_01_Shelf2/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_01_Shelf2/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Hexagon_Sign6" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Hexagon_Sign.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1.3147159814834595, -0, 0, 0), (0, 1.3147159814834595, -0, 0), (0, 0, 1.3147159814834595, 0), (141.39175415039062, -0.11065699905157089, 200.61770629882812, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Hexagon_Sign6/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Vive_Blue.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Hexagon_Sign6/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Vive_Blue.M_Vive_Blue@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lobby_Wall_03" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Wall_03.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (338.05999755859375, 607.0960083007812, 236.94000244140625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lobby_Wall_03/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lobby_Wall_03/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Heater_003" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Heater_003.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-420.02044677734375, -744.1827392578125, 111.39414978027344, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Heater_003/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Heater_003/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Steckdosenbox_02" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Steckdosenbox_02.usda@
    )
    {
        rel material:binding = </Root/SM_Steckdosenbox_02/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (404.686279296875, -749.4991455078125, 4.949272155761719, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Steckdosenbox_02/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                token outputs:out
            }
        }
    }

    def "SM_Kitchen_Handle12" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9999999999721977, 0.000007456851052152761, 0, 0), (-0.000007456851052152761, 0.9999999999721977, 0, 0), (0, 0, 1, 0), (887.5031127929688, -565.6380615234375, 77.01847839355469, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Oven" (
        prepend references = @Assets/Game/Meshes/Oven/SM_Oven.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.0000037284255260949806, -0.9999999999930496, 0, 0), (0.9999999999930496, -0.0000037284255260949806, 0, 0), (0, 0, 1, 0), (889.3639526367188, -405.1805725097656, 69.9163818359375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle27" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-826.1566772460938, -767.41259765625, 262.29205322265625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lift_Text_EG_Apartment" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Text_EG_Apartment.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-4.1441497802734375, 851.010986328125, 122.27799987792969, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_EG_Apartment/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_EG_Apartment/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_EG_Apartment/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_EG_Apartment/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Socket_038" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_038.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-375.76226806640625, -256.9938659667969, 22.457122802734375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_038/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_038/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_038/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_038/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Fridge_Drawer_03" (
        prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Drawer_03.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000006391586616083522, -0.9999999999795741, 0, 0), (0.9999999999795741, 0.000006391586616083522, 0, 0), (0, 0, 1, 0), (912.5414428710938, -505.2992248535156, 65.243896484375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lift_Interior_Walls" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Interior_Walls.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-97.73860168457031, 820.8519897460938, 118.09100341796875, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lamp_10" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-284.60736083984375, -643.9384765625, 282.2744140625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_10/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_10/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_10/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_10/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_06_Base_Drawer_01" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_06_Base_Drawer_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000004261057743981667, -0.9999999999909218, 0, 0), (0.9999999999909218, 0.000004261057743981667, 0, 0), (0, 0, 1, 0), (912.4244995117188, -615.68505859375, 75.298095703125, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lobby_Wall_05" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Wall_05.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-728.7039794921875, 182.06399536132812, 308.94000244140625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lobby_Wall_05/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/StarterContent/Materials/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lobby_Wall_05/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/StarterContent/Materials/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lobby_Wall_05/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Glass.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lobby_Wall_05/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Glass.M_Glass@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_Island_Cover_5" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Island_Cover_03.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000006391586616083522, -0.9999999999795741, 0, 0), (0.9999999999795741, 0.000006391586616083522, 0, 0), (0, 0, 1, 0), (691.473388671875, -373.35833740234375, 37.344390869140625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_04_Base" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_04_Base.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000004261057743981667, -0.9999999999909218, 0, 0), (0.9999999999909218, 0.000004261057743981667, 0, 0), (0, 0, 1, 0), (926.9992065429688, -586.656982421875, 175.45452880859375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Ledercouch" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Ledercouch.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-248.95269775390625, -680.0079345703125, 35.61919021606445, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Ledercouch/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Ledercouch/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Ledercouch/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Leather_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Ledercouch/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Leather_Black.M_Leather_Black@
                    token outputs:out
                }
            }
        }
    }

    def SphereLight "PointLight13"
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 6500
        bool inputs:enableColorTemperature = 0
        float inputs:exposure = 0
        float inputs:intensity = 61.89359
        float inputs:radius = 3
        bool treatAsPoint = 0
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000008763464462768766, 0.9999999999616018, 1.5700924586687032e-16, 0), (0.9999999999616018, 0.000008763464460881387, 6.879724731763504e-22, 0), (-6.879724731763504e-22, 1.5700924586687032e-16, -1.0000000000000018, 0), (-282.19537353515625, -640.494140625, 279.477294921875, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle5" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (551.610107421875, -767.6142578125, 102.2781982421875, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Floor_Number_EG" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Floor_Number_EG.usda@
    )
    {
        rel material:binding = </Root/SM_Floor_Number_EG/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000001065264436106439, 0.4999999999988653, 0, 0), (-0.4999999999988653, -0.000001065264436106439, 0, 0), (0, 0, 0.5, 0), (-99.69198608398438, 727.6643676757812, 228.64901733398438, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Emissive_Red.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Floor_Number_EG/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Emissive_Red.M_Emissive_Red@
                token outputs:out
            }
        }
    }

    def "SM_Kitchen_01_Drawer_02" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_01_Drawer_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000004261057743981667, -0.9999999999909218, 0, 0), (0.9999999999909218, 0.000004261057743981667, 0, 0), (0, 0, 1, 0), (912.1969604492188, -405.0127258300781, 22.633399963378906, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lobby_Lamp_3" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000001997370817630184, -0.9999999999980055, 0, 0), (0.9999999999980055, -0.000001997370817630184, 0, 0), (0, 0, 1, 0), (-510.4844970703125, 743.5625, 235.86062622070312, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_004" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_004.usda@
    )
    {
        rel material:binding = </Root/SM_Socket_004/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-941.6605224609375, -421.7600402832031, 20.212265014648438, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Wall_Inst.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Socket_004/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Wall_Inst.M_Basic_Wall_Inst@
                token outputs:out
            }
        }
    }

    def "SM_Socket_008" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_008.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-887.89111328125, -256.5137634277344, 22.155174255371094, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_008/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_008/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_008/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_008/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_008/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_008/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "Cube8" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Engine/BasicShapes/Cube.usda@
    )
    {
        rel material:binding = </Root/Cube8/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-1.7760499715663336, -0.000007094860767974271, 0, 0), (-1.7924405478738468e-8, 0.0044869999400913305, -0, 0), (0, 0, 2.8326780796051025, 0), (-283.08209228515625, -771.40283203125, 141.28619384765625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Glass.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/Cube8/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass.M_Glass@
                token outputs:out
            }
        }
    }

    def "SM_Wall_03" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Wall_03.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-0.8038939833641052, -761.122314453125, 145.74026489257812, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Wall_03/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Wall_03/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Wall_03/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Wall_03/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kleiderschrank" (
        prepend references = @Assets/Game/Meshes/Kleiderschrank/SM_Kleiderschrank.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002130528872212878, 0.9999999999977306, 0, 0), (-0.9999999999977306, -0.000002130528872212878, 0, 0), (0, 0, 1, 0), (-862.7357177734375, -356.3966979980469, 82.3851318359375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kleiderschrank/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Dark.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kleiderschrank/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Dark.M_Metal_Dark@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kleiderschrank/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Wood_Furniture.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kleiderschrank/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Wood_Furniture.M_Wood_Furniture@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kleiderschrank/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Wood_Furniture.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kleiderschrank/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Wood_Furniture.M_Wood_Furniture@
                    token outputs:out
                }
            }
        }

        def "SM_Kleiderschrank_GriffLinks" (
            prepend apiSchemas = ["MaterialBindingAPI"]
            prepend references = @Assets/Game/Meshes/Kleiderschrank/SM_Kleiderschrank_GriffLinks.usda@
        )
        {
            rel material:binding = </Root/SM_Kleiderschrank/SM_Kleiderschrank_GriffLinks/UnrealMaterial>
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (0.000001864212762936468, -0.9999999999982626, 0, 0), (0.9999999999982626, 0.000001864212762936468, 0, 0), (0, 0, 1, 0), (-4.575584411621094, -27.22459602355957, 7.830116271972656, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Dark.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kleiderschrank/SM_Kleiderschrank_GriffLinks/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Dark.M_Metal_Dark@
                    token outputs:out
                }
            }
        }

        def "SM_Kleiderschrank_GriffRechts" (
            prepend apiSchemas = ["MaterialBindingAPI"]
            prepend references = @Assets/Game/Meshes/Kleiderschrank/SM_Kleiderschrank_GriffRechts.usda@
        )
        {
            rel material:binding = </Root/SM_Kleiderschrank/SM_Kleiderschrank_GriffRechts/UnrealMaterial>
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (0.000001864212762936468, -0.9999999999982626, 0, 0), (0.9999999999982626, 0.000001864212762936468, 0, 0), (0, 0, 1, 0), (4.851173400878906, -26.9502010345459, 7.725982666015625, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Dark.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kleiderschrank/SM_Kleiderschrank_GriffRechts/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Dark.M_Metal_Dark@
                    token outputs:out
                }
            }
        }

        def Mesh "SM_Kleiderschrank_T_rRechts"
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (0.9999999999980655, -0.0000019669534235674804, 0, 0), (0.0000019669534235674804, 0.9999999999980655, 0, 0), (0, 0, 1, 0), (25.012523651123047, -23.387495040893555, 7.42657470703125, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def "Section0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/SM_Kleiderschrank/SM_Kleiderschrank_T_rRechts/Section0/UnrealMaterial>

                def Material "UnrealMaterial" (
                    prepend references = @Assets/Game/Materials_Laborraum/M_Wood_Furniture.usda@
                )
                {
                    token outputs:unreal:surface.connect = </Root/SM_Kleiderschrank/SM_Kleiderschrank_T_rRechts/Section0/UnrealMaterial/UnrealShader.outputs:out>

                    def Shader "UnrealShader"
                    {
                        uniform token info:implementationSource = "sourceAsset"
                        uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Wood_Furniture.M_Wood_Furniture@
                        token outputs:out
                    }
                }
            }
        }

        def Mesh "SM_Kleiderschrank_T_rLinks"
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-24.95319938659668, -23.46027183532715, 7.427146911621094, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def "Section0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/SM_Kleiderschrank/SM_Kleiderschrank_T_rLinks/Section0/UnrealMaterial>

                def Material "UnrealMaterial" (
                    prepend references = @Assets/Game/Materials_Laborraum/M_Wood_Furniture.usda@
                )
                {
                    token outputs:unreal:surface.connect = </Root/SM_Kleiderschrank/SM_Kleiderschrank_T_rLinks/Section0/UnrealMaterial/UnrealShader.outputs:out>

                    def Shader "UnrealShader"
                    {
                        uniform token info:implementationSource = "sourceAsset"
                        uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Wood_Furniture.M_Wood_Furniture@
                        token outputs:out
                    }
                }
            }
        }
    }

    def "SM_Schlafsofa_Kissen_02" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Schlafsofa_Kissen_02.usda@
    )
    {
        rel material:binding = </Root/SM_Schlafsofa_Kissen_02/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-494.41033935546875, -687.5020141601562, 54.43605041503906, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Fabric_Schlafsofa.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Schlafsofa_Kissen_02/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Fabric_Schlafsofa.M_Fabric_Schlafsofa@
                token outputs:out
            }
        }
    }

    def "SM_Window_Handle12" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (257.67340087890625, -767.6610107421875, 262.30279541015625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_005" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_005.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-941.970703125, -400.5458068847656, 20.353858947753906, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_005/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_005/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_005/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_005/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_005/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_005/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Window_Handle17" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-272.97247314453125, -767.7135009765625, 102.30825805664062, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def SphereLight "SpotLight2" (
        prepend apiSchemas = ["ShapingAPI"]
    )
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 4500
        bool inputs:enableColorTemperature = 1
        float inputs:exposure = 0
        float inputs:intensity = 200000
        float inputs:radius = 0
        float inputs:shaping:cone:angle = 25
        float inputs:shaping:cone:softness = 0.19999999
        bool treatAsPoint = 1
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-4.440892098500626e-16, -1.0000000000000004, -1.5700924586837754e-16, 0), (1.0000000000000004, -4.440892098500626e-16, 0, 0), (0, -1.5700924586837754e-16, 1, 0), (-65.42142486572266, 840.3565063476562, 233.38156127929688, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_TV_Halterung2" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_TV_Halterung.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9999999999998629, 5.235987623710573e-7, 0, 0), (-5.235987623710573e-7, 0.9999999999998629, 0, 0), (0, 0, 1, 0), (-423.62347412109375, -266.78546142578125, 139.8004150390625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lift_Text_9_Exhibition" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Text_9_Exhibition.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-3.5907135009765625, 861.9049072265625, 183.87872314453125, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_9_Exhibition/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_9_Exhibition/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_9_Exhibition/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_9_Exhibition/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Socket_023" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_023.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (946.8812866210938, -461.7749328613281, 107.13417053222656, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_023/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_023/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/White.White@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Window_Handle20" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-292.26129150390625, -767.5457763671875, 262.27569580078125, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_Handle5" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9999999999721977, 0.000007456851052152761, 0, 0), (-0.000007456851052152761, 0.9999999999721977, 0, 0), (0, 0, 1, 0), (887.1950073242188, -462.8619689941406, 103.96894836425781, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (826.1110229492188, -767.299072265625, 102.32379150390625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Schlafsofa_Kissen_01" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Schlafsofa_Kissen_01.usda@
    )
    {
        rel material:binding = </Root/SM_Schlafsofa_Kissen_01/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-413.85552978515625, -688.7102661132812, 53.85710144042969, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Fabric_Schlafsofa.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Schlafsofa_Kissen_01/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Fabric_Schlafsofa.M_Fabric_Schlafsofa@
                token outputs:out
            }
        }
    }

    def "SM_Socket_013" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_013.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (270.97198486328125, -256.97540283203125, 22.126564025878906, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Living_Wall_06" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Living_Wall_06.usda@
    )
    {
        rel material:binding = </Root/SM_Living_Wall_06/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (8.527959823608398, -25.85689926147461, 146.19500732421875, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Living_Wall_06/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                token outputs:out
            }
        }
    }

    def "SM_Socket_002" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_002.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-941.9697265625, -662.1239013671875, 20.175857543945312, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_002/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Wall_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_002/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Wall_Inst.M_Basic_Wall_Inst@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_002/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_002/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_002/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_002/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "Cube11" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Engine/BasicShapes/Cube.usda@
    )
    {
        rel material:binding = </Root/Cube11/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (2.0814011096954346, -0, 0, 0), (0, 0.025547999888658524, -0, 0), (0, 0, 1.8233489990234375, 0), (307.98577880859375, -254.01197814941406, 119.79235076904297, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Models/IAILab/IAIDoors/IAIDoorA/M_IAIDoorAGlass.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/Cube11/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Models/IAILab/IAIDoors/IAIDoorA/M_IAIDoorAGlass.M_IAIDoorAGlass@
                token outputs:out
            }
        }
    }

    def Xform "BP_Elevator"
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999909215, 0.000004261057744091236, 0, 0), (-0.000004261057744091236, -0.9999999999909215, 0, 0), (0, 0, 1, 0), (-100, 820, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def "sm_elevator_door_01" (
            prepend apiSchemas = ["MaterialBindingAPI"]
            prepend references = @Assets/Game/Mechanics/Elevator/SM_elevator_door.usda@
        )
        {
            rel material:binding = </Root/BP_Elevator/sm_elevator_door_01/UnrealMaterial>
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-2.220446049250313e-16, -1.0000000000000002, 0, 0), (1.0000000000000002, -2.220446049250313e-16, 0, 0), (0, 0, 1, 0), (-145, 80, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/BP_Elevator/sm_elevator_door_01/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        def "sm_elevator_door_02" (
            prepend apiSchemas = ["MaterialBindingAPI"]
            prepend references = @Assets/Game/Mechanics/Elevator/SM_elevator_door.usda@
        )
        {
            rel material:binding = </Root/BP_Elevator/sm_elevator_door_02/UnrealMaterial>
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-0.000007057376888663924, 0.9999999999750969, 0, 0), (-0.9999999999750969, -0.000007057376888663924, 0, 0), (0, 0, 1, 0), (145, 80.00038146972656, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/BP_Elevator/sm_elevator_door_02/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        def Xform "Scene"
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-72.9998779296875, -42.988685607910156, -0.4423341751098633, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def "button_aufzug_00" (
                prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Button_EG.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-0.9999999999999996, -1.224646799147353e-16, 0, 0), (1.224646799147353e-16, -0.9999999999999996, 0, 0), (0, 0, 1, 0), (-23, -13.257240295410156, 122.98761749267578, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]

                over "Section0" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </Root/BP_Elevator/Scene/button_aufzug_00/Section0/UnrealMaterial>

                    def Material "UnrealMaterial" (
                        prepend references = @Assets/Game/Mechanics/Elevator/M_elevator_button_deactivated.usda@
                    )
                    {
                        token outputs:unreal:surface.connect = </Root/BP_Elevator/Scene/button_aufzug_00/Section0/UnrealMaterial/UnrealShader.outputs:out>

                        def Shader "UnrealShader"
                        {
                            uniform token info:implementationSource = "sourceAsset"
                            uniform asset info:unreal:sourceAsset = @/Game/Mechanics/Elevator/M_elevator_button_deactivated.M_elevator_button_deactivated@
                            token outputs:out
                        }
                    }
                }

                over "Section2" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </Root/BP_Elevator/Scene/button_aufzug_00/Section2/UnrealMaterial>

                    def Material "UnrealMaterial" (
                        prepend references = @Assets/Game/Materials/M_Basic_Black.usda@
                    )
                    {
                        token outputs:unreal:surface.connect = </Root/BP_Elevator/Scene/button_aufzug_00/Section2/UnrealMaterial/UnrealShader.outputs:out>

                        def Shader "UnrealShader"
                        {
                            uniform token info:implementationSource = "sourceAsset"
                            uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Black.M_Basic_Black@
                            token outputs:out
                        }
                    }
                }

                over "Section1" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </Root/BP_Elevator/Scene/button_aufzug_00/Section1/UnrealMaterial>

                    def Material "UnrealMaterial" (
                        prepend references = @Assets/Game/Materials/M_Basic_Black.usda@
                    )
                    {
                        token outputs:unreal:surface.connect = </Root/BP_Elevator/Scene/button_aufzug_00/Section1/UnrealMaterial/UnrealShader.outputs:out>

                        def Shader "UnrealShader"
                        {
                            uniform token info:implementationSource = "sourceAsset"
                            uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Black.M_Basic_Black@
                            token outputs:out
                        }
                    }
                }
            }

            def "button_aufzug_01" (
                prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Button_1Floor.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-0.9999999999999996, -1.224646799147353e-16, 0, 0), (1.224646799147353e-16, -0.9999999999999996, 0, 0), (0, 0, 1, 0), (-23, -13.257240295410156, 129.9959259033203, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]

                over "Section0" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </Root/BP_Elevator/Scene/button_aufzug_01/Section0/UnrealMaterial>

                    def Material "UnrealMaterial" (
                        prepend references = @Assets/Game/Mechanics/Elevator/M_elevator_button_deactivated.usda@
                    )
                    {
                        token outputs:unreal:surface.connect = </Root/BP_Elevator/Scene/button_aufzug_01/Section0/UnrealMaterial/UnrealShader.outputs:out>

                        def Shader "UnrealShader"
                        {
                            uniform token info:implementationSource = "sourceAsset"
                            uniform asset info:unreal:sourceAsset = @/Game/Mechanics/Elevator/M_elevator_button_deactivated.M_elevator_button_deactivated@
                            token outputs:out
                        }
                    }
                }

                over "Section2" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </Root/BP_Elevator/Scene/button_aufzug_01/Section2/UnrealMaterial>

                    def Material "UnrealMaterial" (
                        prepend references = @Assets/Game/Materials/M_Basic_Black.usda@
                    )
                    {
                        token outputs:unreal:surface.connect = </Root/BP_Elevator/Scene/button_aufzug_01/Section2/UnrealMaterial/UnrealShader.outputs:out>

                        def Shader "UnrealShader"
                        {
                            uniform token info:implementationSource = "sourceAsset"
                            uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Black.M_Basic_Black@
                            token outputs:out
                        }
                    }
                }

                over "Section1" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </Root/BP_Elevator/Scene/button_aufzug_01/Section1/UnrealMaterial>

                    def Material "UnrealMaterial" (
                        prepend references = @Assets/Game/Materials/M_Basic_Black.usda@
                    )
                    {
                        token outputs:unreal:surface.connect = </Root/BP_Elevator/Scene/button_aufzug_01/Section1/UnrealMaterial/UnrealShader.outputs:out>

                        def Shader "UnrealShader"
                        {
                            uniform token info:implementationSource = "sourceAsset"
                            uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Black.M_Basic_Black@
                            token outputs:out
                        }
                    }
                }
            }

            def "button_aufzug_02" (
                prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Button_2Floor.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-0.9999999999113447, -0.000013315805450004733, 0, 0), (0.000013315805450004733, -0.9999999999113447, 0, 0), (0, 0, 1, 0), (-23.000062942504883, -13.257240295410156, 136.8962860107422, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]

                over "Section0" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </Root/BP_Elevator/Scene/button_aufzug_02/Section0/UnrealMaterial>

                    def Material "UnrealMaterial" (
                        prepend references = @Assets/Game/Mechanics/Elevator/M_elevator_button_deactivated.usda@
                    )
                    {
                        token outputs:unreal:surface.connect = </Root/BP_Elevator/Scene/button_aufzug_02/Section0/UnrealMaterial/UnrealShader.outputs:out>

                        def Shader "UnrealShader"
                        {
                            uniform token info:implementationSource = "sourceAsset"
                            uniform asset info:unreal:sourceAsset = @/Game/Mechanics/Elevator/M_elevator_button_deactivated.M_elevator_button_deactivated@
                            token outputs:out
                        }
                    }
                }

                over "Section2" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </Root/BP_Elevator/Scene/button_aufzug_02/Section2/UnrealMaterial>

                    def Material "UnrealMaterial" (
                        prepend references = @Assets/Game/Materials/M_Basic_Black.usda@
                    )
                    {
                        token outputs:unreal:surface.connect = </Root/BP_Elevator/Scene/button_aufzug_02/Section2/UnrealMaterial/UnrealShader.outputs:out>

                        def Shader "UnrealShader"
                        {
                            uniform token info:implementationSource = "sourceAsset"
                            uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Black.M_Basic_Black@
                            token outputs:out
                        }
                    }
                }

                over "Section1" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </Root/BP_Elevator/Scene/button_aufzug_02/Section1/UnrealMaterial>

                    def Material "UnrealMaterial" (
                        prepend references = @Assets/Game/Materials/M_Basic_Black.usda@
                    )
                    {
                        token outputs:unreal:surface.connect = </Root/BP_Elevator/Scene/button_aufzug_02/Section1/UnrealMaterial/UnrealShader.outputs:out>

                        def Shader "UnrealShader"
                        {
                            uniform token info:implementationSource = "sourceAsset"
                            uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Black.M_Basic_Black@
                            token outputs:out
                        }
                    }
                }
            }

            def "button_aufzug_03" (
                prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Button_3Floor.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-0.9999999998765561, -0.000015712650430907916, 0, 0), (0.000015712650430907916, -0.9999999998765561, 0, 0), (0, 0, 1, 0), (-23, -13.155214309692383, 143.8593292236328, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]

                over "Section0" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </Root/BP_Elevator/Scene/button_aufzug_03/Section0/UnrealMaterial>

                    def Material "UnrealMaterial" (
                        prepend references = @Assets/Game/Mechanics/Elevator/M_elevator_button_deactivated.usda@
                    )
                    {
                        token outputs:unreal:surface.connect = </Root/BP_Elevator/Scene/button_aufzug_03/Section0/UnrealMaterial/UnrealShader.outputs:out>

                        def Shader "UnrealShader"
                        {
                            uniform token info:implementationSource = "sourceAsset"
                            uniform asset info:unreal:sourceAsset = @/Game/Mechanics/Elevator/M_elevator_button_deactivated.M_elevator_button_deactivated@
                            token outputs:out
                        }
                    }
                }

                over "Section2" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </Root/BP_Elevator/Scene/button_aufzug_03/Section2/UnrealMaterial>

                    def Material "UnrealMaterial" (
                        prepend references = @Assets/Game/Materials/M_Basic_Black.usda@
                    )
                    {
                        token outputs:unreal:surface.connect = </Root/BP_Elevator/Scene/button_aufzug_03/Section2/UnrealMaterial/UnrealShader.outputs:out>

                        def Shader "UnrealShader"
                        {
                            uniform token info:implementationSource = "sourceAsset"
                            uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Black.M_Basic_Black@
                            token outputs:out
                        }
                    }
                }

                over "Section1" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </Root/BP_Elevator/Scene/button_aufzug_03/Section1/UnrealMaterial>

                    def Material "UnrealMaterial" (
                        prepend references = @Assets/Game/Materials/M_Basic_Black.usda@
                    )
                    {
                        token outputs:unreal:surface.connect = </Root/BP_Elevator/Scene/button_aufzug_03/Section1/UnrealMaterial/UnrealShader.outputs:out>

                        def Shader "UnrealShader"
                        {
                            uniform token info:implementationSource = "sourceAsset"
                            uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Black.M_Basic_Black@
                            token outputs:out
                        }
                    }
                }
            }

            def "button_aufzug_04" (
                prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Button_4Floor.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-0.9999999997897446, -0.00002050634039242971, 0, 0), (0.00002050634039242971, -0.9999999997897446, 0, 0), (0, 0, 1, 0), (-23, -13.257240295410156, 150.89419555664062, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]

                over "Section0" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </Root/BP_Elevator/Scene/button_aufzug_04/Section0/UnrealMaterial>

                    def Material "UnrealMaterial" (
                        prepend references = @Assets/Game/Mechanics/Elevator/M_elevator_button_deactivated.usda@
                    )
                    {
                        token outputs:unreal:surface.connect = </Root/BP_Elevator/Scene/button_aufzug_04/Section0/UnrealMaterial/UnrealShader.outputs:out>

                        def Shader "UnrealShader"
                        {
                            uniform token info:implementationSource = "sourceAsset"
                            uniform asset info:unreal:sourceAsset = @/Game/Mechanics/Elevator/M_elevator_button_deactivated.M_elevator_button_deactivated@
                            token outputs:out
                        }
                    }
                }

                over "Section2" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </Root/BP_Elevator/Scene/button_aufzug_04/Section2/UnrealMaterial>

                    def Material "UnrealMaterial" (
                        prepend references = @Assets/Game/Materials/M_Basic_Black.usda@
                    )
                    {
                        token outputs:unreal:surface.connect = </Root/BP_Elevator/Scene/button_aufzug_04/Section2/UnrealMaterial/UnrealShader.outputs:out>

                        def Shader "UnrealShader"
                        {
                            uniform token info:implementationSource = "sourceAsset"
                            uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Black.M_Basic_Black@
                            token outputs:out
                        }
                    }
                }

                over "Section1" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </Root/BP_Elevator/Scene/button_aufzug_04/Section1/UnrealMaterial>

                    def Material "UnrealMaterial" (
                        prepend references = @Assets/Game/Materials/M_Basic_Black.usda@
                    )
                    {
                        token outputs:unreal:surface.connect = </Root/BP_Elevator/Scene/button_aufzug_04/Section1/UnrealMaterial/UnrealShader.outputs:out>

                        def Shader "UnrealShader"
                        {
                            uniform token info:implementationSource = "sourceAsset"
                            uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Black.M_Basic_Black@
                            token outputs:out
                        }
                    }
                }
            }

            def "button_aufzug_05" (
                prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Button_5Floor.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-0.9999999997897446, -0.00002050634039242971, 0, 0), (0.00002050634039242971, -0.9999999997897446, 0, 0), (0, 0, 1, 0), (-22.9998722076416, -13.257240295410156, 157.84507751464844, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]

                over "Section0" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </Root/BP_Elevator/Scene/button_aufzug_05/Section0/UnrealMaterial>

                    def Material "UnrealMaterial" (
                        prepend references = @Assets/Game/Mechanics/Elevator/M_elevator_button_deactivated.usda@
                    )
                    {
                        token outputs:unreal:surface.connect = </Root/BP_Elevator/Scene/button_aufzug_05/Section0/UnrealMaterial/UnrealShader.outputs:out>

                        def Shader "UnrealShader"
                        {
                            uniform token info:implementationSource = "sourceAsset"
                            uniform asset info:unreal:sourceAsset = @/Game/Mechanics/Elevator/M_elevator_button_deactivated.M_elevator_button_deactivated@
                            token outputs:out
                        }
                    }
                }

                over "Section2" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </Root/BP_Elevator/Scene/button_aufzug_05/Section2/UnrealMaterial>

                    def Material "UnrealMaterial" (
                        prepend references = @Assets/Game/Materials/M_Basic_Black.usda@
                    )
                    {
                        token outputs:unreal:surface.connect = </Root/BP_Elevator/Scene/button_aufzug_05/Section2/UnrealMaterial/UnrealShader.outputs:out>

                        def Shader "UnrealShader"
                        {
                            uniform token info:implementationSource = "sourceAsset"
                            uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Black.M_Basic_Black@
                            token outputs:out
                        }
                    }
                }

                over "Section1" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </Root/BP_Elevator/Scene/button_aufzug_05/Section1/UnrealMaterial>

                    def Material "UnrealMaterial" (
                        prepend references = @Assets/Game/Materials/M_Basic_Black.usda@
                    )
                    {
                        token outputs:unreal:surface.connect = </Root/BP_Elevator/Scene/button_aufzug_05/Section1/UnrealMaterial/UnrealShader.outputs:out>

                        def Shader "UnrealShader"
                        {
                            uniform token info:implementationSource = "sourceAsset"
                            uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Black.M_Basic_Black@
                            token outputs:out
                        }
                    }
                }
            }

            def "button_aufzug_06" (
                prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Button_6Floor.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-0.9999999997897446, -0.00002050634039242971, 0, 0), (0.00002050634039242971, -0.9999999997897446, 0, 0), (0, 0, 1, 0), (-22.999732971191406, -13.257240295410156, 164.79981994628906, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]

                over "Section0" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </Root/BP_Elevator/Scene/button_aufzug_06/Section0/UnrealMaterial>

                    def Material "UnrealMaterial" (
                        prepend references = @Assets/Game/Mechanics/Elevator/M_elevator_button_deactivated.usda@
                    )
                    {
                        token outputs:unreal:surface.connect = </Root/BP_Elevator/Scene/button_aufzug_06/Section0/UnrealMaterial/UnrealShader.outputs:out>

                        def Shader "UnrealShader"
                        {
                            uniform token info:implementationSource = "sourceAsset"
                            uniform asset info:unreal:sourceAsset = @/Game/Mechanics/Elevator/M_elevator_button_deactivated.M_elevator_button_deactivated@
                            token outputs:out
                        }
                    }
                }

                over "Section2" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </Root/BP_Elevator/Scene/button_aufzug_06/Section2/UnrealMaterial>

                    def Material "UnrealMaterial" (
                        prepend references = @Assets/Game/Materials/M_Basic_Black.usda@
                    )
                    {
                        token outputs:unreal:surface.connect = </Root/BP_Elevator/Scene/button_aufzug_06/Section2/UnrealMaterial/UnrealShader.outputs:out>

                        def Shader "UnrealShader"
                        {
                            uniform token info:implementationSource = "sourceAsset"
                            uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Black.M_Basic_Black@
                            token outputs:out
                        }
                    }
                }

                over "Section1" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </Root/BP_Elevator/Scene/button_aufzug_06/Section1/UnrealMaterial>

                    def Material "UnrealMaterial" (
                        prepend references = @Assets/Game/Materials/M_Basic_Black.usda@
                    )
                    {
                        token outputs:unreal:surface.connect = </Root/BP_Elevator/Scene/button_aufzug_06/Section1/UnrealMaterial/UnrealShader.outputs:out>

                        def Shader "UnrealShader"
                        {
                            uniform token info:implementationSource = "sourceAsset"
                            uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Black.M_Basic_Black@
                            token outputs:out
                        }
                    }
                }
            }

            def "button_aufzug_07" (
                prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Button_7Floor.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-0.9999999997897446, -0.00002050634039242971, 0, 0), (0.00002050634039242971, -0.9999999997897446, 0, 0), (0, 0, 1, 0), (-22.9998779296875, -13.257240295410156, 172.03948974609375, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]

                over "Section0" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </Root/BP_Elevator/Scene/button_aufzug_07/Section0/UnrealMaterial>

                    def Material "UnrealMaterial" (
                        prepend references = @Assets/Game/Mechanics/Elevator/M_elevator_button_deactivated.usda@
                    )
                    {
                        token outputs:unreal:surface.connect = </Root/BP_Elevator/Scene/button_aufzug_07/Section0/UnrealMaterial/UnrealShader.outputs:out>

                        def Shader "UnrealShader"
                        {
                            uniform token info:implementationSource = "sourceAsset"
                            uniform asset info:unreal:sourceAsset = @/Game/Mechanics/Elevator/M_elevator_button_deactivated.M_elevator_button_deactivated@
                            token outputs:out
                        }
                    }
                }

                over "Section2" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </Root/BP_Elevator/Scene/button_aufzug_07/Section2/UnrealMaterial>

                    def Material "UnrealMaterial" (
                        prepend references = @Assets/Game/Materials/M_Basic_Black.usda@
                    )
                    {
                        token outputs:unreal:surface.connect = </Root/BP_Elevator/Scene/button_aufzug_07/Section2/UnrealMaterial/UnrealShader.outputs:out>

                        def Shader "UnrealShader"
                        {
                            uniform token info:implementationSource = "sourceAsset"
                            uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Black.M_Basic_Black@
                            token outputs:out
                        }
                    }
                }

                over "Section1" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </Root/BP_Elevator/Scene/button_aufzug_07/Section1/UnrealMaterial>

                    def Material "UnrealMaterial" (
                        prepend references = @Assets/Game/Materials/M_Basic_Black.usda@
                    )
                    {
                        token outputs:unreal:surface.connect = </Root/BP_Elevator/Scene/button_aufzug_07/Section1/UnrealMaterial/UnrealShader.outputs:out>

                        def Shader "UnrealShader"
                        {
                            uniform token info:implementationSource = "sourceAsset"
                            uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Black.M_Basic_Black@
                            token outputs:out
                        }
                    }
                }
            }

            def "button_aufzug_08" (
                prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Button_8Floor.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-0.9999999999999996, -1.224646799147353e-16, 0, 0), (1.224646799147353e-16, -0.9999999999999996, 0, 0), (0, 0, 1, 0), (-22.9998779296875, -13.257240295410156, 178.97999572753906, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]

                over "Section0" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </Root/BP_Elevator/Scene/button_aufzug_08/Section0/UnrealMaterial>

                    def Material "UnrealMaterial" (
                        prepend references = @Assets/Game/Mechanics/Elevator/M_elevator_button_deactivated.usda@
                    )
                    {
                        token outputs:unreal:surface.connect = </Root/BP_Elevator/Scene/button_aufzug_08/Section0/UnrealMaterial/UnrealShader.outputs:out>

                        def Shader "UnrealShader"
                        {
                            uniform token info:implementationSource = "sourceAsset"
                            uniform asset info:unreal:sourceAsset = @/Game/Mechanics/Elevator/M_elevator_button_deactivated.M_elevator_button_deactivated@
                            token outputs:out
                        }
                    }
                }

                over "Section2" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </Root/BP_Elevator/Scene/button_aufzug_08/Section2/UnrealMaterial>

                    def Material "UnrealMaterial" (
                        prepend references = @Assets/Game/Materials/M_Basic_Black.usda@
                    )
                    {
                        token outputs:unreal:surface.connect = </Root/BP_Elevator/Scene/button_aufzug_08/Section2/UnrealMaterial/UnrealShader.outputs:out>

                        def Shader "UnrealShader"
                        {
                            uniform token info:implementationSource = "sourceAsset"
                            uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Black.M_Basic_Black@
                            token outputs:out
                        }
                    }
                }

                over "Section1" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </Root/BP_Elevator/Scene/button_aufzug_08/Section1/UnrealMaterial>

                    def Material "UnrealMaterial" (
                        prepend references = @Assets/Game/Materials/M_Basic_Black.usda@
                    )
                    {
                        token outputs:unreal:surface.connect = </Root/BP_Elevator/Scene/button_aufzug_08/Section1/UnrealMaterial/UnrealShader.outputs:out>

                        def Shader "UnrealShader"
                        {
                            uniform token info:implementationSource = "sourceAsset"
                            uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Black.M_Basic_Black@
                            token outputs:out
                        }
                    }
                }
            }

            def "button_aufzug_09" (
                prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Button_9Floor.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-0.9999999997897446, -0.00002050634039242971, 0, 0), (0.00002050634039242971, -0.9999999997897446, 0, 0), (0, 0, 1, 0), (-22.9998779296875, -13.257240295410156, 185.927978515625, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]

                over "Section0" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </Root/BP_Elevator/Scene/button_aufzug_09/Section0/UnrealMaterial>

                    def Material "UnrealMaterial" (
                        prepend references = @Assets/Game/Mechanics/Elevator/M_elevator_button_deactivated.usda@
                    )
                    {
                        token outputs:unreal:surface.connect = </Root/BP_Elevator/Scene/button_aufzug_09/Section0/UnrealMaterial/UnrealShader.outputs:out>

                        def Shader "UnrealShader"
                        {
                            uniform token info:implementationSource = "sourceAsset"
                            uniform asset info:unreal:sourceAsset = @/Game/Mechanics/Elevator/M_elevator_button_deactivated.M_elevator_button_deactivated@
                            token outputs:out
                        }
                    }
                }

                over "Section2" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </Root/BP_Elevator/Scene/button_aufzug_09/Section2/UnrealMaterial>

                    def Material "UnrealMaterial" (
                        prepend references = @Assets/Game/Materials/M_Basic_Black.usda@
                    )
                    {
                        token outputs:unreal:surface.connect = </Root/BP_Elevator/Scene/button_aufzug_09/Section2/UnrealMaterial/UnrealShader.outputs:out>

                        def Shader "UnrealShader"
                        {
                            uniform token info:implementationSource = "sourceAsset"
                            uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Black.M_Basic_Black@
                            token outputs:out
                        }
                    }
                }

                over "Section1" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </Root/BP_Elevator/Scene/button_aufzug_09/Section1/UnrealMaterial>

                    def Material "UnrealMaterial" (
                        prepend references = @Assets/Game/Materials/M_Basic_Black.usda@
                    )
                    {
                        token outputs:unreal:surface.connect = </Root/BP_Elevator/Scene/button_aufzug_09/Section1/UnrealMaterial/UnrealShader.outputs:out>

                        def Shader "UnrealShader"
                        {
                            uniform token info:implementationSource = "sourceAsset"
                            uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Black.M_Basic_Black@
                            token outputs:out
                        }
                    }
                }
            }
        }

        def Xform "InvisibleWall"
        {
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (0, 106, 105, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Xform "Box"
        {
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (0, -150, 106, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Xform "Scene1"
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (0, 0.00000762939453125, 5.390305519104004, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def "SM_Milchbehaelter" (
        prepend references = @Assets/Game/Meshes/Kaffeemaschine/SM_Milchbehaelter.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.17364083409737363, -0.9848090478534245, 0, 0), (0.9848090478534245, -0.17364083409737363, 0, 0), (0, 0, 1, 0), (908.5513916015625, -542.3364868164062, 91.9450454711914, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lift_Text_5_Bookstore" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Text_5_Bookstore.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-4.144139766693115, 855.718017578125, 157.45700073242188, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_5_Bookstore/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_5_Bookstore/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_5_Bookstore/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_5_Bookstore/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lift_Text_3_CitizenScience" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Text_3_CitizenScience.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-4.1441497802734375, 844.7139892578125, 143.39199829101562, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_3_CitizenScience/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_3_CitizenScience/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_3_CitizenScience/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_3_CitizenScience/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kabelkanal" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Raum/SM_Kabelkanal.usda@
    )
    {
        rel material:binding = </Root/SM_Kabelkanal/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-944.7801513671875, -513.154296875, 146.62924194335938, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/White.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Kabelkanal/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/White.White@
                token outputs:out
            }
        }
    }

    def "SM_Couchtisch_Schublade" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Couchtisch_Schublade.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999991132, -0.0000013315805450608307, 0, 0), (0.0000013315805450608307, -0.9999999999991132, 0, 0), (0, 0, 1, 0), (-672.2617797851562, -516.286376953125, 14.112991333007812, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_Handle21" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999812403, -0.0000061252705073353635, 0, 0), (0.0000061252705073353635, -0.9999999999812403, 0, 0), (0, 0, 1, 0), (725.8090209960938, -418.4059143066406, 77.58291625976562, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_Handle17" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999812403, -0.0000061252705073353635, 0, 0), (0.0000061252705073353635, -0.9999999999812403, 0, 0), (0, 0, 1, 0), (726.1334838867188, -534.0177001953125, 38.486419677734375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_Base_Board_02" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Base_Board_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.0000022750053504122945, 1.0049999952290536, 0, 0), (-0.999999999997438, -0.000002263686926573527, 0, 0), (0, 0, 1, 0), (724.1290893554688, -498.2369689941406, -2.2933270931243896, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Vents2" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-727.8013305664062, -257.8290710449219, 254.03439331054688, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lift_Text_4_RobotGarage" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Text_4_RobotGarage.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-4.144139766693115, 852.0449829101562, 150.45799255371094, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_4_RobotGarage/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_4_RobotGarage/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_4_RobotGarage/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_4_RobotGarage/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_01_Base" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_01_Base.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000006391586616083522, -0.9999999999795741, 0, 0), (0.9999999999795741, 0.000006391586616083522, 0, 0), (0, 0, 1, 0), (916.7594604492188, -403.9442443847656, 104.18363952636719, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_01_Base/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Rubber_Plastic.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_01_Base/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Rubber_Plastic.M_Rubber_Plastic@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lobby_Doorelement_01" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Doorelement_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (56.362632751464844, -14.016845703125, 118.40127563476562, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lobby_Doorelement_01/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lobby_Doorelement_01/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lobby_Doorelement_01/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Glass.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lobby_Doorelement_01/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Glass.M_Glass@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kaffeemaschine" (
        prepend references = @Assets/Game/Meshes/Kaffeemaschine/SM_Kaffeemaschine.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.17364083409737363, -0.9848090478534245, 0, 0), (0.9848090478534245, -0.17364083409737363, 0, 0), (0, 0, 1, 0), (910.8317260742188, -578.1892700195312, 105.45821380615234, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lamp_6" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (265.46661376953125, -643.9361572265625, 282.2744140625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_6/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_6/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_6/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_6/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_02_Drawer_5" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_02_Drawer_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000006391586616083522, -0.9999999999795741, 0, 0), (0.9999999999795741, 0.000006391586616083522, 0, 0), (0, 0, 1, 0), (915.8632202148438, -454.8772277832031, 57.17234802246094, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_018" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_018.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (561.343505859375, -256.462158203125, 22.841232299804688, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_018/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_018/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_018/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_018/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_018/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_018/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Fridge_Door_Tray_02" (
        prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Door_Tray_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000006391586616083522, -0.9999999999795741, 0, 0), (0.9999999999795741, 0.000006391586616083522, 0, 0), (0, 0, 1, 0), (858.1517944335938, -485.5211486816406, 157.09222412109375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Steckdosenbox_06" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Steckdosenbox_06.usda@
    )
    {
        rel material:binding = </Root/SM_Steckdosenbox_06/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-695.3101196289062, -749.5030517578125, 5.089371204376221, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Steckdosenbox_06/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                token outputs:out
            }
        }
    }

    def "SM_Kitchen_Handle25" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000009054747706072064, -0.9999999999590059, 0, 0), (0.9999999999590059, 0.000009054747706072064, 0, 0), (0, 0, 1, 0), (841.4635620117188, -474.5448303222656, 73.71696472167969, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Fridge_Door_Tray_01" (
        prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Door_Tray_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000006391586616083522, -0.9999999999795741, 0, 0), (0.9999999999795741, 0.000006391586616083522, 0, 0), (0, 0, 1, 0), (858.2731323242188, -485.7226867675781, 133.13973999023438, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Steckdosenbox_03" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Steckdosenbox_03.usda@
    )
    {
        rel material:binding = </Root/SM_Steckdosenbox_03/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (129.31915283203125, -749.4998779296875, 4.949272155761719, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Steckdosenbox_03/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                token outputs:out
            }
        }
    }

    def "SM_Vents" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-790.0111694335938, -257.8294677734375, 254.03439331054688, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Vents11" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (171.56646728515625, -257.8258056640625, 252.39938354492188, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_Handle11" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9999999999721977, 0.000007456851052152761, 0, 0), (-0.000007456851052152761, 0.9999999999721977, 0, 0), (0, 0, 1, 0), (887.5133666992188, -565.65283203125, 37.62403869628906, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Vents13" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (358.54345703125, -257.8247985839844, 252.56137084960938, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_TV_Halterung" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_TV_Halterung.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9999999999998629, 5.235987623710573e-7, 0, 0), (-5.235987623710573e-7, 0.9999999999998629, 0, 0), (0, 0, 1, 0), (487.990966796875, -267.02252197265625, 140.7315673828125, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Fridge_Drawer_05" (
        prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Drawer_05.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000006391586616083522, -0.9999999999795741, 0, 0), (0.9999999999795741, 0.000006391586616083522, 0, 0), (0, 0, 1, 0), (909.3261108398438, -505.5552062988281, 29.58281707763672, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Plant_Big_02" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Plant_Big_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-1.6401116847893644, 0.000005678246108949062, 0, 0), (-0.000005678246108949062, -1.6401116847893644, 0, 0), (0, 0, 1.6401116847991943, 0), (-481.8311767578125, 96.57827758789062, 101.00424194335938, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Plant_Big_02/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Rust.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Plant_Big_02/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Rust.M_Metal_Rust@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kaffeemaschine_Metallteil" (
        prepend references = @Assets/Game/Meshes/Kaffeemaschine/SM_Kaffeemaschine_Metallteil.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.17364083409737363, -0.9848090478534245, 0, 0), (0.9848090478534245, -0.17364083409737363, 0, 0), (0, 0, 1, 0), (896.4593505859375, -575.6292724609375, 109.48861694335938, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Vents15" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (545.935546875, -257.8241271972656, 253.11538696289062, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_027" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_027.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (946.6500854492188, -562.3604736328125, 22.941558837890625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_027/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_027/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_027/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_027/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Socket_23" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_022.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (946.5031127929688, -580.34033203125, 112.11958312988281, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_23/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_23/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/White.White@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Socket_024" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_024.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (946.6498413085938, -457.6242980957031, 22.712661743164062, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_024/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_024/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_024/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_024/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_02_Drawer_02" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_02_Drawer_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000006391586616083522, -0.9999999999795741, 0, 0), (0.9999999999795741, 0.000006391586616083522, 0, 0), (0, 0, 1, 0), (915.8644409179688, -454.8774719238281, 123.27159118652344, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Living_Wall_01" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Living_Wall_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (8.528019905090332, -253.41900634765625, 145.76800537109375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Living_Wall_01/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Living_Wall_01/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Living_Wall_01/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Dark.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Living_Wall_01/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Dark.M_Metal_Dark@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Living_Wall_01/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Dark.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Living_Wall_01/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Dark.M_Metal_Dark@
                    token outputs:out
                }
            }
        }
    }

    def "Cube2" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Engine/BasicShapes/Cube.usda@
    )
    {
        rel material:binding = </Root/Cube2/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-2.088833093626521, -0.000008344348528519779, 0, 0), (-1.7924405478738468e-8, 0.0044869999400913305, -0, 0), (0, 0, 1.6306040287017822, 0), (294.38775634765625, -249.0147705078125, 122.51976013183594, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Glass.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/Cube2/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass.M_Glass@
                token outputs:out
            }
        }
    }

    def "SM_Living_Ceiling_02" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Living_Ceiling_02.usda@
    )
    {
        rel material:binding = </Root/SM_Living_Ceiling_02/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (8.527950286865234, -141.38699340820312, 298.7799987792969, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Living_Ceiling_02/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                token outputs:out
            }
        }
    }

    def "Cube3" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Engine/BasicShapes/Cube.usda@
    )
    {
        rel material:binding = </Root/Cube3/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-2.088833093626521, -0.000008344348528519779, 0, 0), (-1.7924405478738468e-8, 0.0044869999400913305, -0, 0), (0, 0, 1.6306040287017822, 0), (698.14697265625, -249.01010131835938, 122.51976013183594, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Glass.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/Cube3/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass.M_Glass@
                token outputs:out
            }
        }
    }

    def "SM_Lobby_Ceiling" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Ceiling.usda@
    )
    {
        rel material:binding = </Root/SM_Lobby_Ceiling/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-200.74200439453125, 607.0960083007812, 502.9410095214844, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Lobby_Ceiling/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                token outputs:out
            }
        }
    }

    def "SM_Socket_028" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_028.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (946.8854370117188, -602.5235595703125, 22.99236297607422, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_05_Base_Drawer_02" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_05_Base_Drawer_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000004261057743981667, -0.9999999999909218, 0, 0), (0.9999999999909218, 0.000004261057743981667, 0, 0), (0, 0, 1, 0), (912.4430541992188, -565.7596435546875, 55.53614807128906, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Bodenspot_02" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Bodenspot_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (130.94000244140625, -573.073974609375, -6.92510986328125, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Bodenspot_02/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Bodenspot_02/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Bodenspot_02/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Floor_Wood.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Bodenspot_02/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Floor_Wood.M_Floor_Wood@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Bodenspot_02/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Bodenspot_02/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Couchtisch" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Couchtisch.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999991132, -0.0000013315805450608307, 0, 0), (0.0000013315805450608307, -0.9999999999991132, 0, 0), (0, 0, 1, 0), (-672.2615356445312, -522.66357421875, 12.160582542419434, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "Cube6" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Engine/BasicShapes/Cube.usda@
    )
    {
        rel material:binding = </Root/Cube6/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-1.7760499715663336, -0.000007094860767974271, 0, 0), (-1.7924405478738468e-8, 0.0044869999400913305, -0, 0), (0, 0, 2.8326780796051025, 0), (817.1871948242188, -771.40087890625, 141.28619384765625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Glass.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/Cube6/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass.M_Glass@
                token outputs:out
            }
        }
    }

    def "SM_Dishwasher_Front" (
        prepend references = @Assets/Game/Meshes/Dishwasher/SM_Dishwasher_Front.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000001065264436106439, 0.9999999999990817, -8.377580705893988e-7, 0), (-0.9999999999984334, 0.0000010652656204923616, 0.0000014137166647504233, 0), (0.0000014137175571839958, 8.377565646060003e-7, 0.9999999999986497, 0), (720.41650390625, -653.593505859375, 9.6981201171875, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Dishwasher_Front/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Dishwasher_Front/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                    token outputs:out
                }
            }
        }

        over "Section5" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Dishwasher_Front/Section5/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Dishwasher.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Dishwasher_Front/Section5/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Dishwasher.M_Metal_Dishwasher@
                    token outputs:out
                }
            }
        }

        over "Section4" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Dishwasher_Front/Section4/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Glass_Oven_Door.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Dishwasher_Front/Section4/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass_Oven_Door.M_Glass_Oven_Door@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_08_Sink_Drawer_02" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_08_Sink_Drawer_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002263686926573527, 0.999999999997438, 0, 0), (-0.999999999997438, -0.000002263686926573527, 0, 0), (0, 0, 1, 0), (703.254638671875, -594.6436767578125, 58.628875732421875, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_Handle23" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999812403, -0.0000061252705073353635, 0, 0), (0.0000061252705073353635, -0.9999999999812403, 0, 0), (0, 0, 1, 0), (725.8090209960938, -418.4059143066406, 38.486419677734375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Fridge_Drawer_01" (
        prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Drawer_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000006391586616083522, -0.9999999999795741, 0, 0), (0.9999999999795741, 0.000006391586616083522, 0, 0), (0, 0, 1, 0), (914.5978393554688, -505.3273010253906, 111.88725280761719, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_10_Drawer_01" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_10_Drawer_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002130528872212878, 0.9999999999977306, 0, 0), (-0.9999999999977306, -0.000002130528872212878, 0, 0), (0, 0, 1, 0), (701.01953125, -484.5238342285156, 75.42022705078125, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_05_Base_Drawer_03" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_05_Base_Drawer_03.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000004261057743981667, -0.9999999999909218, 0, 0), (0.9999999999909218, 0.000004261057743981667, 0, 0), (0, 0, 1, 0), (912.4015502929688, -565.7559814453125, 22.597000122070312, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_031" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_031.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (946.9860229492188, -741.9481201171875, 22.401260375976562, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_031/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_031/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_031/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_031/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Sessel" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Sessel.usda@
    )
    {
        rel material:binding = </Root/SM_Sessel/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9396897060166244, 0.34202815148228655, 0, 0), (-0.34202815148228655, 0.9396897060166244, 0, 0), (0, 0, 1, 0), (-688.7962036132812, -381.79620361328125, 28.337310791015625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Sessel.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Sessel/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Sessel.M_Sessel@
                token outputs:out
            }
        }
    }

    def "SM_Lobby_Wall_04" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Wall_04.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-200.74200439453125, -11.422900199890137, 308.94000244140625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lobby_Wall_04/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lobby_Wall_04/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lobby_Wall_04/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Granite.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lobby_Wall_04/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Granite.M_Granite@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lobby_Wall_04/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lobby_Wall_04/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Socket_006" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_006.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-941.9705810546875, -370.84088134765625, 20.353858947753906, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_006/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_006/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_006/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_006/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_006/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_006/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Window_Handle18" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-292.54254150390625, -767.7137451171875, 102.29446411132812, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lamp_4" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (541.139404296875, -419.6159973144531, 282.2744140625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_4/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_4/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_4/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_4/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Socket_026" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_026.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (946.8302612304688, -481.3443908691406, 22.307464599609375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_026/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_026/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/White.White@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_Handle18" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999812403, -0.0000061252705073353635, 0, 0), (0.0000061252705073353635, -0.9999999999812403, 0, 0), (0, 0, 1, 0), (725.8807983398438, -484.1571350097656, 77.58291625976562, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Bodenspot_01" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Bodenspot_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (371.230224609375, -573.4794921875, -6.92510986328125, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Bodenspot_01/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Bodenspot_01/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Bodenspot_01/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Floor_Wood.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Bodenspot_01/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Floor_Wood.M_Floor_Wood@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Bodenspot_01/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Bodenspot_01/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_Handle10" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9999999999721977, 0.000007456851052152761, 0, 0), (-0.000007456851052152761, 0.9999999999721977, 0, 0), (0, 0, 1, 0), (887.7626342773438, -616.12451171875, 37.62403869628906, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle23" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-547.5181274414062, -767.5025634765625, 262.28997802734375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lobby_Window_3" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Window_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999940066, 0.000003462109417045141, 0, 0), (-0.000003462109417045141, -0.9999999999940066, 0, 0), (0, 0, 1, 0), (333.91058349609375, 311.8387756347656, 166.28701782226562, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lobby_Window_3/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lobby_Window_3/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Socket_003" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_003.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-941.9696044921875, -632.9267578125, 20.175857543945312, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_003/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Wall_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_003/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Wall_Inst.M_Basic_Wall_Inst@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_003/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_003/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_003/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_003/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Living_Wall_02" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Living_Wall_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-938.2219848632812, -505.260986328125, 145.76800537109375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Living_Wall_02/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Living_Wall_02/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_08_Sink_Base" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_08_Sink_Base.usda@
    )
    {
        rel material:binding = </Root/SM_Kitchen_08_Sink_Base/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-2.663161091653876e-7, 0.9999999999999648, 0, 0), (-0.9999999999999648, -2.663161091653876e-7, 0, 0), (0, 0, 1, 0), (695.95556640625, -594.501220703125, 42.191162109375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Kitchen_08_Sink_Base/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                token outputs:out
            }
        }
    }

    def "SM_Socket_029" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_029.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (946.6505737304688, -707.7177734375, 22.94145965576172, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_029/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_029/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_029/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_029/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_Handle4" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9999999999721977, 0.000007456851052152761, 0, 0), (-0.000007456851052152761, 0.9999999999721977, 0, 0), (0, 0, 1, 0), (887.2406616210938, -422.8436584472656, 132.94631958007812, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lobby_Lift_Walls" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Lift_Walls.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-100.5719985961914, 862.5859985351562, 125.35700225830078, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lobby_Lift_Walls/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lobby_Lift_Walls/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lobby_Ceiling_02" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Ceiling_02.usda@
    )
    {
        rel material:binding = </Root/SM_Lobby_Ceiling_02/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-94.37590026855469, 950.81201171875, 274.30499267578125, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Lobby_Ceiling_02/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                token outputs:out
            }
        }
    }

    def "SM_Kitchen_10_Base" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_10_Base.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002130528872212878, 0.9999999999977306, 0, 0), (-0.9999999999977306, -0.000002130528872212878, 0, 0), (0, 0, 1, 0), (695.923583984375, -484.4614562988281, 42.85498046875, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_032" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_032.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (672.46142578125, -746.765625, 10.683456420898438, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lobby_Wall_01" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Wall_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-486.4289855957031, 789.27001953125, 236.94000244140625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lobby_Wall_01/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lobby_Wall_01/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lobby_Wall_01/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Granite.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lobby_Wall_01/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Granite.M_Granite@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Dishwasher_Tray_02" (
        prepend references = @Assets/Game/Meshes/Dishwasher/SM_Dishwasher_Tray_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-2.663161091653876e-7, 0.9999999999999648, 0, 0), (-0.9999999999999648, -2.663161091653876e-7, 0, 0), (0, 0, 1, 0), (695.062744140625, -654.3604736328125, 49.20225524902344, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_TV_Samsung" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_TV_Samsung.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9999999999998629, 5.235987623710573e-7, 0, 0), (-5.235987623710573e-7, 0.9999999999998629, 0, 0), (0, 0, 1, 0), (504.034912109375, -278.45977783203125, 139.3026123046875, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section3" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_TV_Samsung/Section3/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_TV_Samsung/Section3/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_TV_Samsung/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black_02.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_TV_Samsung/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black_02.M_Basic_Black_02@
                    token outputs:out
                }
            }
        }

        over "Section4" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_TV_Samsung/Section4/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_TV_Samsung/Section4/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Hexagon_Sign4" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Hexagon_Sign.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-267.9234619140625, -0.11059600114822388, 207.4463653564453, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Hexagon_Sign4/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Plastic_Darkblue.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Hexagon_Sign4/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Plastic_Darkblue.M_Plastic_Darkblue@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_Handle2" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9999999999721977, 0.000007456851052152761, 0, 0), (-0.000007456851052152761, 0.9999999999721977, 0, 0), (0, 0, 1, 0), (887.2877807617188, -405.1579895019531, 63.926544189453125, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_Handle8" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9999999999721977, 0.000007456851052152761, 0, 0), (-0.000007456851052152761, 0.9999999999721977, 0, 0), (0, 0, 1, 0), (887.7626342773438, -616.12451171875, 64.0369873046875, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Counter_Sink_Stove" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Counter_Sink_Stove.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002130528872212878, 0.9999999999977306, 0, 0), (-0.9999999999977306, -0.000002130528872212878, 0, 0), (0, 0, 1, 0), (679.948974609375, -528.1734619140625, 39.30595397949219, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_05_Base_Drawer_01" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_05_Base_Drawer_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000004261057743981667, -0.9999999999909218, 0, 0), (0.9999999999909218, 0.000004261057743981667, 0, 0), (0, 0, 1, 0), (912.4838256835938, -565.7802734375, 75.34152221679688, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lift_Text_8_Education" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Text_8_Education.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-4.144139766693115, 861.4769897460938, 178.5850067138672, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_8_Education/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_8_Education/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_8_Education/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_8_Education/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Vents4" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-603.1814575195312, -257.82879638671875, 254.03439331054688, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_037" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_037.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-701.3501586914062, -746.770751953125, 10.608657836914062, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_022" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_022.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (946.8822631835938, -335.8727722167969, 58.46746826171875, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_022/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_022/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/White.White@
                    token outputs:out
                }
            }
        }
    }

    def SphereLight "PointLight10"
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 6500
        bool inputs:enableColorTemperature = 0
        float inputs:exposure = 0
        float inputs:intensity = 61.89359
        float inputs:radius = 3
        bool treatAsPoint = 0
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000008763464462768766, 0.9999999999616018, 1.5700924586687032e-16, 0), (0.9999999999616018, 0.000008763464460881387, 6.879724731763504e-22, 0), (-6.879724731763504e-22, 1.5700924586687032e-16, -1.0000000000000018, 0), (269.89068603515625, -418.4768371582031, 279.47711181640625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def SphereLight "PointLight5"
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 6500
        bool inputs:enableColorTemperature = 0
        float inputs:exposure = 0
        float inputs:intensity = 61.89359
        float inputs:radius = 3
        bool treatAsPoint = 0
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000008763464462768766, 0.9999999999616018, 1.5700924586687032e-16, 0), (0.9999999999616018, 0.000008763464460881387, 6.879724731763504e-22, 0), (-6.879724731763504e-22, 1.5700924586687032e-16, -1.0000000000000018, 0), (829.1862182617188, -640.4903564453125, 279.47705078125, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_Handle6" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9999999999721977, 0.000007456851052152761, 0, 0), (-0.000007456851052152761, 0.9999999999721977, 0, 0), (0, 0, 1, 0), (907.8522338867188, -587.1405029296875, 142.10247802734375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_04_Shelf2" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_04_Shelf.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002263686926573527, 0.999999999997438, 0, 0), (-0.999999999997438, -0.000002263686926573527, 0, 0), (0, 0, 1, 0), (927.8331909179688, -585.639892578125, 187.9552001953125, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_04_Shelf2/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Glass_Blue.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_04_Shelf2/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass_Blue.M_Glass_Blue@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_04_Shelf2/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Glass_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_04_Shelf2/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass_Inst.M_Glass_Inst@
                    token outputs:out
                }
            }
        }
    }

    def SphereLight "PointLight12"
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 6500
        bool inputs:enableColorTemperature = 0
        float inputs:exposure = 0
        float inputs:intensity = 61.89359
        float inputs:radius = 3
        bool treatAsPoint = 0
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000008763464462768766, 0.9999999999616018, 1.5700924586687032e-16, 0), (0.9999999999616018, 0.000008763464460881387, 6.879724731763504e-22, 0), (-6.879724731763504e-22, 1.5700924586687032e-16, -1.0000000000000018, 0), (-12.16961669921875, -418.4752502441406, 279.477294921875, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kaffeemaschine_Gitter" (
        prepend references = @Assets/Game/Meshes/Kaffeemaschine/SM_Kaffeemaschine_Gitter.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.17364083409737363, -0.9848090478534245, 0, 0), (0.9848090478534245, -0.17364083409737363, 0, 0), (0, 0, 1, 0), (894.5112915039062, -575.311767578125, 89.85118103027344, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Bodenspot_04" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Bodenspot_04.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-459.03082275390625, -572.505126953125, -6.92510986328125, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Bodenspot_04/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Bodenspot_04/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Bodenspot_04/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Floor_Wood.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Bodenspot_04/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Floor_Wood.M_Floor_Wood@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Bodenspot_04/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Bodenspot_04/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Window_Handle8" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (532.310302734375, -767.4197998046875, 262.298828125, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Living_Ceiling_01" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Living_Ceiling_01.usda@
    )
    {
        rel material:binding = </Root/SM_Living_Ceiling_01/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.9495540261268616, -513.916015625, 297.3550109863281, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Living_Ceiling_01/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                token outputs:out
            }
        }
    }

    def "SM_Kitchen_02_Drawer_4" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_02_Drawer_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000006391586616083522, -0.9999999999795741, 0, 0), (0.9999999999795741, 0.000006391586616083522, 0, 0), (0, 0, 1, 0), (915.8632202148438, -454.8772277832031, 84.73822021484375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Metaltraeger" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Metaltraeger.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-10.07147216796875, -532.4451904296875, 282.28497314453125, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lamp_7" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-7.63568115234375, -643.937255859375, 282.2744140625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_7/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_7/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_7/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_7/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_Handle22" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999812403, -0.0000061252705073353635, 0, 0), (0.0000061252705073353635, -0.9999999999812403, 0, 0), (0, 0, 1, 0), (725.8090209960938, -418.4059143066406, 64.36567687988281, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_04" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_04.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-6.886658191680908, -769.544677734375, 144.88824462890625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Window_04/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Window_04/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Window_03" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_03.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (266.94317626953125, -769.5440673828125, 144.88824462890625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_09_Drawer_01" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_09_Drawer_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002130528872212878, 0.9999999999977306, 0, 0), (-0.9999999999977306, -0.000002130528872212878, 0, 0), (0, 0, 1, 0), (701.014892578125, -534.363037109375, 75.35824584960938, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lift_Text_2_BioSignals" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Text_2_BioSignals.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-4.144139766693115, 851.4849853515625, 136.52099609375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_2_BioSignals/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_2_BioSignals/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_2_BioSignals/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_2_BioSignals/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Handle_Door" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Handle_Door.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.34202252074975714, -0.9396917554709, 0, 0), (0.9396917554709, -0.34202252074975714, 0, 0), (0, 0, 1, 0), (-346.62127685546875, -343.26568603515625, 96.43714904785156, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lobby_Stairbase" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Stairbase.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-94.37590026855469, 909.4110107421875, -59.48830032348633, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def SphereLight "PointLight17"
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 6500
        bool inputs:enableColorTemperature = 0
        float inputs:exposure = 0
        float inputs:intensity = 61.89359
        float inputs:radius = 3
        bool treatAsPoint = 0
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000008763464462768766, 0.9999999999616018, 1.5700924586687032e-16, 0), (0.9999999999616018, 0.000008763464460881387, 6.879724731763504e-22, 0), (-6.879724731763504e-22, 1.5700924586687032e-16, -1.0000000000000018, 0), (-827.611083984375, -640.496337890625, 279.477294921875, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kaffeemaschine_Wasserbehaelter" (
        prepend references = @Assets/Game/Meshes/Kaffeemaschine/SM_Kaffeemaschine_Wasserbehaelter.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.17364083409737363, -0.9848090478534245, 0, 0), (0.9848090478534245, -0.17364083409737363, 0, 0), (0, 0, 1, 0), (918.0681762695312, -567.4725341796875, 111.65601348876953, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kaffeemaschine_Wasserbehaelter/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Coffeemachine_Plastic.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kaffeemaschine_Wasserbehaelter/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Coffeemachine_Plastic.M_Coffeemachine_Plastic@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_Handle9" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9999999999721977, 0.000007456851052152761, 0, 0), (-0.000007456851052152761, 0.9999999999721977, 0, 0), (0, 0, 1, 0), (887.7623901367188, -615.81005859375, 77.01847839355469, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Handle_Door2" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Handle_Door.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9396924386148275, -0.34202064383618513, 0, 0), (0.34202064383618513, 0.9396924386148275, 0, 0), (0, 0, 1, 0), (109.69587707519531, -292.7026062011719, 95.28445434570312, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Sofa" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Sofa.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-711.7830200195312, -660.6627197265625, 28.47601318359375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Sofa/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Fabric_Sofa_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Sofa/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Fabric_Sofa_Inst.M_Fabric_Sofa_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lift_Text_1_Retail" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Text_1_Retail.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-4.1441497802734375, 835.4190063476562, 129.46099853515625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_1_Retail/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_1_Retail/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_1_Retail/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_1_Retail/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Fridge_Drawer_02" (
        prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Drawer_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000006391586616083522, -0.9999999999795741, 0, 0), (0.9999999999795741, 0.000006391586616083522, 0, 0), (0, 0, 1, 0), (914.2584838867188, -505.7495422363281, 95.90028381347656, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Living_Floor_02" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Living_Floor_02.usda@
    )
    {
        rel material:binding = </Root/SM_Living_Floor_02/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (8.527950286865234, -141.38699340820312, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials/M_Carpet.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Living_Floor_02/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Carpet.M_Carpet@
                token outputs:out
            }
        }
    }

    def "SM_Vents17" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (795.9786987304688, -257.8233337402344, 253.11538696289062, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Dishwasher_Tray_01" (
        prepend references = @Assets/Game/Meshes/Dishwasher/SM_Dishwasher_Tray_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-2.663161091653876e-7, 0.9999999999999648, 0, 0), (-0.9999999999999648, -2.663161091653876e-7, 0, 0), (0, 0, 1, 0), (693.403076171875, -654.361083984375, 31.683059692382812, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section3" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Dishwasher_Tray_01/Section3/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_Orange.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Dishwasher_Tray_01/Section3/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_Orange.M_Plastic_Orange@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Dishwasher_Tray_01/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Dishwasher_Tray_01/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "Cube" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Engine/BasicShapes/Cube.usda@
    )
    {
        rel material:binding = </Root/Cube/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-2.088833093626521, -0.000008344348528519779, 0, 0), (-1.7924405478738468e-8, 0.0044869999400913305, -0, 0), (0, 0, 1.6306040287017822, 0), (-632.8215942382812, -249.01837158203125, 122.51976013183594, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Glass.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/Cube/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass.M_Glass@
                token outputs:out
            }
        }
    }

    def "SM_Window_Handle16" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-16.72442626953125, -768.46875, 262.3031005859375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle3" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (825.5905151367188, -767.5076904296875, 262.268310546875, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lift_Base" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Base.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-97.73860168457031, 724.9810180664062, 120.97799682617188, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Fridge_Egg_Tray" (
        prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Egg_Tray.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000006391586616083522, -0.9999999999795741, 0, 0), (0.9999999999795741, 0.000006391586616083522, 0, 0), (0, 0, 1, 0), (866.6823120117188, -485.2942199707031, 157.16207885742188, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_ShadowBox" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Shadow.usda@
    )
    {
        rel material:binding = </Root/SM_Window_ShadowBox/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-9.330750465393066, -772.42919921875, 144.88824462890625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/MI_Basic_Wall_Dark.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Window_ShadowBox/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Basic_Wall_Dark.MI_Basic_Wall_Dark@
                token outputs:out
            }
        }
    }

    def "SM_Schreibtischstuhl_Unten2" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Schreibtischstuhl_Unten.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.17364752199146993, 0.9848078686252575, 0, 0), (-0.9848078686252575, 0.17364752199146993, 0, 0), (0, 0, 1, 0), (236.11973571777344, -651.6109619140625, 4.246506214141846, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schreibtischstuhl_Unten2/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black_02.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schreibtischstuhl_Unten2/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black_02.M_Basic_Black_02@
                    token outputs:out
                }
            }
        }
    }

    def SphereLight "PointLight6"
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 6500
        bool inputs:enableColorTemperature = 0
        float inputs:exposure = 0
        float inputs:intensity = 61.89359
        float inputs:radius = 3
        bool treatAsPoint = 0
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000008763464462768766, 0.9999999999616018, 1.5700924586687032e-16, 0), (0.9999999999616018, 0.000008763464460881387, 6.879724731763504e-22, 0), (-6.879724731763504e-22, 1.5700924586687032e-16, -1.0000000000000018, 0), (829.1859741210938, -418.4750061035156, 279.47711181640625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_Island_Cover_03" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Island_Cover_03.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000006391586616083522, -0.9999999999795741, 0, 0), (0.9999999999795741, 0.000006391586616083522, 0, 0), (0, 0, 1, 0), (691.39306640625, -684.9991455078125, 37.91902160644531, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Vents3" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-664.6716918945312, -257.8288269042969, 254.03439331054688, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lamp_8" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-7.636414051055908, -419.6184387207031, 282.2744140625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_8/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_8/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_8/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_8/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Counter_Watertab" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Counter_Watertab.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002130528872212878, 0.9999999999977306, 0, 0), (-0.9999999999977306, -0.000002130528872212878, 0, 0), (0, 0, 1, 0), (691.159423828125, -592.7650146484375, 101.44515991210938, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle19" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-273.56756591796875, -767.6890869140625, 262.3040771484375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_019" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_019.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (750.7619018554688, -256.9753723144531, 22.52215576171875, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Exterior_Plane_VertexColor" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Exterior_Plane_VertexColor.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (0, -1800, -70, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle22" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-566.6936645507812, -767.2989501953125, 102.33474731445312, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_07" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_07.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-835.2679443359375, -769.5482177734375, 144.88824462890625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Fridge_Drawer_04" (
        prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Drawer_04.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000006391586616083522, -0.9999999999795741, 0, 0), (0.9999999999795741, 0.000006391586616083522, 0, 0), (0, 0, 1, 0), (912.9213256835938, -505.0425109863281, 47.561737060546875, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def SphereLight "SpotLight4" (
        prepend apiSchemas = ["ShapingAPI"]
    )
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 4500
        bool inputs:enableColorTemperature = 1
        float inputs:exposure = 0
        float inputs:intensity = 200000
        float inputs:radius = 0
        float inputs:shaping:cone:angle = 25
        float inputs:shaping:cone:softness = 0.19999999
        bool treatAsPoint = 1
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-4.440892098500626e-16, -1.0000000000000004, -1.5700924586837754e-16, 0), (1.0000000000000004, -4.440892098500626e-16, 0, 0), (0, -1.5700924586837754e-16, 1, 0), (-65.42142486572266, 779.7899169921875, 233.38156127929688, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_036" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_036.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-424.63995361328125, -746.769775390625, 10.608657836914062, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lamp_9" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-284.60821533203125, -419.6194152832031, 282.2744140625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_9/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_9/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_9/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_9/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Counter_Sink_Tap" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Counter_Sink_Tap.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000006391586616083522, -0.9999999999795741, 0, 0), (0.9999999999795741, 0.000006391586616083522, 0, 0), (0, 0, 1, 0), (679.788330078125, -588.7095947265625, 94.07470703125, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_Handle16" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999812403, -0.0000061252705073353635, 0, 0), (0.0000061252705073353635, -0.9999999999812403, 0, 0), (0, 0, 1, 0), (726.1334838867188, -534.0177001953125, 64.36567687988281, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Vents_Short" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents_Short.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (919.4625854492188, -257.8227233886719, 253.11538696289062, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Vents_Short/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Dark.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Vents_Short/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Dark.M_Metal_Dark@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Vents_Short/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Vents_Short/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Window_Handle9" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (276.96636962890625, -767.5267333984375, 102.33305358886719, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Retail_Door_Part1" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Retail_Door_Part1.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-188.10787963867188, -260.493408203125, 107.36080932617188, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Vents14" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (419.099609375, -257.8247375488281, 252.56137084960938, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_016" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_016.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (526.50390625, -256.97418212890625, 22.376632690429688, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_Handle24" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000009054747706072064, -0.9999999999590059, 0, 0), (0.9999999999590059, 0.000009054747706072064, 0, 0), (0, 0, 1, 0), (841.4635620117188, -474.5448303222656, 87.33622741699219, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lobby_Floor_02" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Floor_02.usda@
    )
    {
        rel material:binding = </Root/SM_Lobby_Floor_02/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-94.37590026855469, 960.8579711914062, -144, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials/M_Granite.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Lobby_Floor_02/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Granite.M_Granite@
                token outputs:out
            }
        }
    }

    def "SM_Kitchen_01_Shelf" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_01_Shelf.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000006391586616083522, -0.9999999999795741, 0, 0), (0.9999999999795741, 0.000006391586616083522, 0, 0), (0, 0, 1, 0), (916.8461303710938, -404.8857727050781, 179.98199462890625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_01_Shelf/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_01_Shelf/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_01_Shelf/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_01_Shelf/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Schiene" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Schiene.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (47.80181884765625, -312.7987976074219, 285.19818115234375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schiene/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schiene/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schiene/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schiene/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schiene/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schiene/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Socket_014" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_014.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (286.62017822265625, -256.463134765625, 22.076278686523438, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def SphereLight "SpotLight10" (
        prepend apiSchemas = ["ShapingAPI"]
    )
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 4500
        bool inputs:enableColorTemperature = 1
        float inputs:exposure = 0
        float inputs:intensity = 80000
        float inputs:radius = 0
        float inputs:shaping:cone:angle = 50
        float inputs:shaping:cone:softness = 1
        bool treatAsPoint = 1
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9848059956365325, 0.000003824419080786981, -0.173658143902655, 0), (0.000004368660972961845, 0.9999999999866713, -0.00000275175369033087, 0), (0.17365814388981649, -0.0000034685970886573104, -0.9848059956401138, 0), (-501.3300476074219, 741.836669921875, 238.83700561523438, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Living_Exterior_Lawn" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Living_Exterior_Lawn.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (8.193120002746582, 316.0159912109375, -72, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lobby_Stairs_01" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Stairs_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-396.1159973144531, 958.3889770507812, 77, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lobby_Stairs_01/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Granite.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lobby_Stairs_01/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Granite.M_Granite@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lobby_Stairs_01/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Rubber_Dark.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lobby_Stairs_01/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Rubber_Dark.M_Rubber_Dark@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lobby_Wall_02" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Wall_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-94.37590026855469, 1217.300048828125, 236.94000244140625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lobby_Wall_02/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lobby_Wall_02/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_TV_Wandboard" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_TV_Wandboard.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9999999999998629, 5.235987623710573e-7, 0, 0), (-5.235987623710573e-7, 0.9999999999998629, 0, 0), (0, 0, 1, 0), (491.023193359375, -257.62799072265625, 134.702392578125, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def SphereLight "PointLight15"
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 6500
        bool inputs:enableColorTemperature = 0
        float inputs:exposure = 0
        float inputs:intensity = 61.89359
        float inputs:radius = 3
        bool treatAsPoint = 0
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000008763464462768766, 0.9999999999616018, 1.5700924586687032e-16, 0), (0.9999999999616018, 0.000008763464460881387, 6.879724731763504e-22, 0), (-6.879724731763504e-22, 1.5700924586687032e-16, -1.0000000000000018, 0), (-555.4104614257812, -640.4952392578125, 279.477294921875, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "Plane2" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Engine/BasicShapes/Plane.usda@
    )
    {
        rel material:binding = </Root/Plane2/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.7499999999844588, 5.992112453686145e-7, -0.00000479092870423543, 0), (-0.000004790930060648288, -0.000001697761367491779, 0.7499999999827764, 0), (7.98933866955506e-7, 0.9999999999971187, 0.0000022636869267955717, 0), (-163.17750549316406, 1.7166213989257812, 194.08570861816406, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Logo_KnowledgeLabs.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/Plane2/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Logo_KnowledgeLabs.M_Logo_KnowledgeLabs@
                token outputs:out
            }
        }
    }

    def "SM_Lobby_Lamp_01" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-386.04095458984375, -1.6708984375, 232.59066772460938, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lobby_Floor_01" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Floor_01.usda@
    )
    {
        rel material:binding = </Root/SM_Lobby_Floor_01/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-196.35800170898438, 358.2380065917969, 0.000045776399929309264, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials/M_Granite.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Lobby_Floor_01/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Granite.M_Granite@
                token outputs:out
            }
        }
    }

    def "SM_Ceiling_Panel_4" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Raum/SM_Ceiling_Panel_01.usda@
    )
    {
        rel material:binding = </Root/SM_Ceiling_Panel_4/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-8.40496826171875, -532.6513671875, 282.25640869140625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Ceiling_Panel_4/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                token outputs:out
            }
        }
    }

    def "SM_Kitchen_04_Door_01" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_04_Door_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000004261057743981667, -0.9999999999909218, 0, 0), (0.9999999999909218, 0.000004261057743981667, 0, 0), (0, 0, 1, 0), (909.7726440429688, -585.8197021484375, 195.37130737304688, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Counter_Wall" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Counter_Wall.usda@
    )
    {
        rel material:binding = </Root/SM_Counter_Wall/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000004527373853147054, 0.9999999999897518, 0, 0), (-0.9999999999897518, -0.000004527373853147054, 0, 0), (0, 0, 1, 0), (917.0800170898438, -586.7626953125, 83.6351318359375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Wood_Counter.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Counter_Wall/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Wood_Counter.M_Wood_Counter@
                token outputs:out
            }
        }
    }

    def "SM_Lift_Interior_Ceiling" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Interior_Ceiling.usda@
    )
    {
        rel material:binding = </Root/SM_Lift_Interior_Ceiling/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-97.73860168457031, 824.239013671875, 236.18299865722656, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials/M_Metal_Dark.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Lift_Interior_Ceiling/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Dark.M_Metal_Dark@
                token outputs:out
            }
        }
    }

    def "SM_Retail_Door_Part2" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Retail_Door_Part1.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-1, 0, -0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-99.23184967041016, -259.47296142578125, 106.14469909667969, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def SphereLight "SpotLight9" (
        prepend apiSchemas = ["ShapingAPI"]
    )
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 4500
        bool inputs:enableColorTemperature = 1
        float inputs:exposure = 0
        float inputs:intensity = 80000
        float inputs:radius = 0
        float inputs:shaping:cone:angle = 50
        float inputs:shaping:cone:softness = 1
        bool treatAsPoint = 1
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9848057874973457, 0.000007343925315189595, 0.17365932413148152, 0), (-0.00000719218293222347, -0.9999999999730085, 0.0000015030689535589947, 0), (0.17365932413783228, 2.31241377432571e-7, 0.9848057875235796, 0), (-501.3300476074219, 741.836669921875, 229.9035186767578, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Vents5" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-539.3818969726562, -257.82855224609375, 254.03439331054688, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def DomeLight "SkyLight"
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:exposure = 0
        float inputs:intensity = 0.6
        asset inputs:texture:file = @Assets/Game/StarterContent/HDRI/dreifaltigkeitsberg_4k.hdr@
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-4.440892098500626e-16, -1.0000000000000004, 1.1102230246251565e-16, 0), (1.1102230246251565e-16, -4.440892098500626e-16, 1.0000000000000004, 0), (-1.0000000000000004, -1.1102230246251565e-16, -4.440892098500626e-16, 0), (1062.6429443359375, 691.9876708984375, -51.10572814941406, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Fridge_Shelf" (
        prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Shelf.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000006391586616083522, -0.9999999999795741, 0, 0), (0.9999999999795741, 0.000006391586616083522, 0, 0), (0, 0, 1, 0), (915.7033081054688, -505.3463439941406, 141.98516845703125, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lamp_13" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-833.920654296875, -419.6213684082031, 282.2744140625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_13/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_13/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_13/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_13/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_Handle20" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999812403, -0.0000061252705073353635, 0, 0), (0.0000061252705073353635, -0.9999999999812403, 0, 0), (0, 0, 1, 0), (725.8807983398438, -484.1571350097656, 38.486419677734375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle4" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (806.8419799804688, -767.50732421875, 262.26812744140625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lamp_3" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (541.140625, -643.935546875, 282.2744140625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_3/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_3/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_3/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_3/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Wall_01" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Wall_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (8.67095947265625, -252.67132568359375, 145.74026489257812, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Wall_01/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Wall_01/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Wall_01/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Wall_01/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Wall_01/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Dark.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Wall_01/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Dark.M_Metal_Dark@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Socket_039" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_039.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-360.59210205078125, -256.51171875, 22.22357940673828, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_039/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_039/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_039/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_039/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_039/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_039/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def SphereLight "SpotLight6" (
        prepend apiSchemas = ["ShapingAPI"]
    )
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 4500
        bool inputs:enableColorTemperature = 1
        float inputs:exposure = 0
        float inputs:intensity = 80000
        float inputs:radius = 0
        float inputs:shaping:cone:angle = 50
        float inputs:shaping:cone:softness = 1
        bool treatAsPoint = 1
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000001130735612808742, -0.9848068280992955, -0.17365342302335313, 0), (-0.999999999992171, -4.5502248169349e-7, -0.000003930969834878284, 0), (0.0000037922297231041124, 0.17365342302643832, -0.9848068280921001, 0), (218.91452026367188, 6.851589202880859, 237.089599609375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Wall_04" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Wall_04.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000006391586616083522, -0.9999999999795741, 0, 0), (0.9999999999795741, 0.000006391586616083522, 0, 0), (0, 0, 1, 0), (945.9454956054688, -505.1389465332031, 145.74026489257812, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Wall_04/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Wall_04/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Wall_04/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Wall_04/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                    token outputs:out
                }
            }
        }
    }

    def SphereLight "SpotLight5" (
        prepend apiSchemas = ["ShapingAPI"]
    )
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 4500
        bool inputs:enableColorTemperature = 1
        float inputs:exposure = 0
        float inputs:intensity = 80000
        float inputs:radius = 0
        float inputs:shaping:cone:angle = 50
        float inputs:shaping:cone:softness = 1
        bool treatAsPoint = 1
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-2.784541703881871e-7, -0.9848074524162159, 0.17364988242266977, 0), (0.9999999999999526, -2.5013202931134515e-7, 1.849830438965805e-7, 0), (-1.3873728289814924e-7, 0.1736498824227129, 0.9848074524162369, 0), (218.91452026367188, 6.851604461669922, 228.15611267089844, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_Handle7" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9999999999721977, 0.000007456851052152761, 0, 0), (-0.000007456851052152761, 0.9999999999721977, 0, 0), (0, 0, 1, 0), (887.3722534179688, -565.6529541015625, 64.0369873046875, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "Cube7" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Engine/BasicShapes/Cube.usda@
    )
    {
        rel material:binding = </Root/Cube7/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-1.7760499715663336, -0.000007094860767974271, 0, 0), (-1.7924405478738468e-8, 0.0044869999400913305, -0, 0), (0, 0, 2.8326780796051025, 0), (-6.828551769256592, -771.40185546875, 141.28619384765625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Glass.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/Cube7/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass.M_Glass@
                token outputs:out
            }
        }
    }

    def "SM_Lobby_Stairs_02" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Stairs_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (201.41200256347656, 965.4349975585938, -67, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_11_Base_Drawer_01" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_11_Base_Drawer_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002130528872212878, 0.9999999999977306, 0, 0), (-0.9999999999977306, -0.000002130528872212878, 0, 0), (0, 0, 1, 0), (701.011474609375, -419.4895324707031, 75.54434204101562, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle26" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-845.1563720703125, -767.59521484375, 102.33474731445312, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle24" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-566.3436889648438, -767.502685546875, 262.25189208984375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_04_Shelf3" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_04_Shelf.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002263686926573527, 0.999999999997438, 0, 0), (-0.999999999997438, -0.000002263686926573527, 0, 0), (0, 0, 1, 0), (927.8331909179688, -585.639892578125, 165.61434936523438, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_04_Shelf3/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Glass_Blue.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_04_Shelf3/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass_Blue.M_Glass_Blue@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_04_Shelf3/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Glass_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_04_Shelf3/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass_Inst.M_Glass_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Ceiling_Panel_5" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Raum/SM_Ceiling_Panel_01.usda@
    )
    {
        rel material:binding = </Root/SM_Ceiling_Panel_5/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (266.61187744140625, -532.650634765625, 282.25640869140625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Ceiling_Panel_5/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                token outputs:out
            }
        }
    }

    def "SM_Lamp_12" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-556.8312377929688, -419.6203918457031, 282.2744140625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_12/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_12/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_12/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_12/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Steckdosenbox_05" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Steckdosenbox_05.usda@
    )
    {
        rel material:binding = </Root/SM_Steckdosenbox_05/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-420.51019287109375, -749.5018310546875, 5.089371204376221, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Steckdosenbox_05/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                token outputs:out
            }
        }
    }

    def "SM_Socket_010" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_010.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (63.36114501953125, -256.46429443359375, 22.33515167236328, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_02_Drawer_3" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_02_Drawer_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000006391586616083522, -0.9999999999795741, 0, 0), (0.9999999999795741, 0.000006391586616083522, 0, 0), (0, 0, 1, 0), (915.8644409179688, -454.8774719238281, 151.2569580078125, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lobby_Window_Corridor2" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Window_Corridor.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999940066, 0.000003462109417045141, 0, 0), (-0.0000037726618131112347, -1.0897003412181394, 0, 0), (0, 0, 1.1382540464401245, 0), (-950.7293701171875, -141.70651245117188, 148.49790954589844, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Fridge_Base" (
        prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Base.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000006391586616083522, -0.9999999999795741, 0, 0), (0.9999999999795741, 0.000006391586616083522, 0, 0), (0, 0, 1, 0), (915.8058471679688, -505.5505676269531, 100.86154174804688, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Xform "CineCameraActor1"
    {
        custom token unrealCameraPrimName = "CameraComponent"
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002130528872212878, -0.9999999999977306, 0, 0), (0.9999999999977306, -0.000002130528872212878, 0, 0), (0, 0, 1, 0), (-69.68572998046875, 497.2104797363281, 120.43856048583984, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Camera "CameraComponent"
        {
            float focalLength = 35
            float focusDistance = 100000
            float fStop = 2.8
            float horizontalAperture = 23.76
            float verticalAperture = 13.365
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.440892098500626e-16, -1.0000000000000004, 1.1102230246251565e-16, 0), (1.1102230246251565e-16, -4.440892098500626e-16, 1.0000000000000004, 0), (-1.0000000000000004, -1.1102230246251565e-16, -4.440892098500626e-16, 0), (0, -0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def "SM_Window_06" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_06.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-556.7820434570312, -769.547119140625, 144.88824462890625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle15" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (2.019347906112671, -768.46875, 262.31842041015625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def SphereLight "PointLight16"
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 6500
        bool inputs:enableColorTemperature = 0
        float inputs:exposure = 0
        float inputs:intensity = 61.89359
        float inputs:radius = 3
        bool treatAsPoint = 0
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000008763464462768766, 0.9999999999616018, 1.5700924586687032e-16, 0), (0.9999999999616018, 0.000008763464460881387, 6.879724731763504e-22, 0), (-6.879724731763504e-22, 1.5700924586687032e-16, -1.0000000000000018, 0), (-555.4111938476562, -418.4801330566406, 279.477294921875, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Hexagon_Sign5" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Hexagon_Sign.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-267.902099609375, -0.11059600114822388, 163.31082153320312, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "Elderberry_LOD0_Var6_wfzobb2ia_6" (
        prepend references = @Assets/Game/Megascans/3D_Plants/Elderberry_wfzobb2ia/Elderberry_LOD0_Var6_wfzobb2ia_6.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (2.0159151554107666, -0, 0, 0), (0, 2.0159151554107666, -0, 0), (0, 0, 2.0159151554107666, 0), (986.1126098632812, -1164.4625244140625, -38.66375732421875, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_11_Base" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_11_Base.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002130528872212878, 0.9999999999977306, 0, 0), (-0.9999999999977306, -0.000002130528872212878, 0, 0), (0, 0, 1, 0), (695.928955078125, -419.4250793457031, 43.72747802734375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def SphereLight "SpotLight3" (
        prepend apiSchemas = ["ShapingAPI"]
    )
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 4500
        bool inputs:enableColorTemperature = 1
        float inputs:exposure = 0
        float inputs:intensity = 200000
        float inputs:radius = 0
        float inputs:shaping:cone:angle = 25
        float inputs:shaping:cone:softness = 0.19999999
        bool treatAsPoint = 1
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-4.440892098500626e-16, -1.0000000000000004, -1.5700924586837754e-16, 0), (1.0000000000000004, -4.440892098500626e-16, 0, 0), (0, -1.5700924586837754e-16, 1, 0), (-121.92201232910156, 779.7899169921875, 233.38156127929688, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def SphereLight "PointLight8"
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 6500
        bool inputs:enableColorTemperature = 0
        float inputs:exposure = 0
        float inputs:intensity = 61.89359
        float inputs:radius = 3
        bool treatAsPoint = 0
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000008763464462768766, 0.9999999999616018, 1.5700924586687032e-16, 0), (0.9999999999616018, 0.000008763464460881387, 6.879724731763504e-22, 0), (-6.879724731763504e-22, 1.5700924586687032e-16, -1.0000000000000018, 0), (545.286865234375, -418.4762268066406, 279.47711181640625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_Base_Board_01" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Base_Board_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000004559762630841167, 1.0071539878742, 0, 0), (-0.9999999999897518, -0.000004527373853147054, 0, 0), (0, 0, 1, 0), (889.2470092773438, -505.0943908691406, -2.088538885116577, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Hexagon_Sign3" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Hexagon_Sign.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-229.49349975585938, -0.11059600114822388, 229.73214721679688, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Schreibtisch_Oben" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Schreibtisch_Oben.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.6427839374995958, -0.7660475244346887, 0, 0), (0.7660475244346887, -0.6427839374995958, 0, 0), (0, 0, 1, 0), (284.43414306640625, -673.2852172851562, 44.232818603515625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schreibtisch_Oben/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schreibtisch_Oben/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/White.White@
                    token outputs:out
                }
            }
        }

        over "Section3" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schreibtisch_Oben/Section3/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schreibtisch_Oben/Section3/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schreibtisch_Oben/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schreibtisch_Oben/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schreibtisch_Oben/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schreibtisch_Oben/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Akustiktrennwand2" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Akustiktrennwand.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9999999999998581, -5.326322180158224e-7, 0, 0), (5.326322180158224e-7, 0.9999999999998581, 0, 0), (0, 0, 1, 0), (-616.5574340820312, -310.257568359375, 90.80523681640625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Akustiktrennwand2/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Fabric_Panel_Grau.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Akustiktrennwand2/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Fabric_Panel_Grau.M_Fabric_Panel_Grau@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Akustiktrennwand2/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Fabric_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Akustiktrennwand2/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Fabric_Black.M_Fabric_Black@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Vents18" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (857.5812377929688, -257.8232421875, 253.11538696289062, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_007" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_007.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-907.1214599609375, -256.5139465332031, 22.199386596679688, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_007/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_007/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_007/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_007/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_007/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_007/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Window_Handle2" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (806.5739135742188, -767.298828125, 102.37115478515625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "Cube4" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Engine/BasicShapes/Cube.usda@
    )
    {
        rel material:binding = </Root/Cube4/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-1.7760499715663336, -0.000007094860767974271, 0, 0), (-1.7924405478738468e-8, 0.0044869999400913305, -0, 0), (0, 0, 2.8326780796051025, 0), (269.22589111328125, -771.4005126953125, 141.28619384765625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Glass.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/Cube4/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass.M_Glass@
                token outputs:out
            }
        }
    }

    def "SM_Kitchen_05_Base" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_05_Base.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000006391586616083522, -0.9999999999795741, 0, 0), (0.9999999999795741, 0.000006391586616083522, 0, 0), (0, 0, 1, 0), (917.7467651367188, -565.6802978515625, 42.1636962890625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle25" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-825.5568237304688, -767.5950927734375, 102.337890625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_09_Drawer_03" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_09_Drawer_03.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002130528872212878, 0.9999999999977306, 0, 0), (-0.9999999999977306, -0.000002130528872212878, 0, 0), (0, 0, 1, 0), (700.979736328125, -534.3707275390625, 22.538467407226562, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def DistantLight "DirectionalLight"
    {
        float inputs:angle = 5
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 7000
        bool inputs:enableColorTemperature = 1
        float inputs:exposure = 0
        float inputs:intensity = 5
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.8672646815484129, 2.3346813991822355, 0.21705929247837985, 0), (-1.4808341080273761, 0.3659356250596643, 1.980712362463305, 0), (1.8179610327621167, -0.815692272014808, 1.5098555562482863, 0), (904.0359497070312, -52.94451904296875, 740.4965209960938, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Fridge_Door_01" (
        prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Door_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999991132, -0.0000013315805450608307, 0, 0), (0.0000013315805450608307, -0.9999999999991132, 0, 0), (0, 0, 1, 0), (887.9982299804688, -475.3434143066406, 134.70498657226562, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Fridge_Door_01/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Rubber_Plastic.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Fridge_Door_01/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Rubber_Plastic.M_Rubber_Plastic@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_Handle19" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999812403, -0.0000061252705073353635, 0, 0), (0.0000061252705073353635, -0.9999999999812403, 0, 0), (0, 0, 1, 0), (725.8807983398438, -484.1571350097656, 64.36567687988281, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Xform "BP_LobbyDoor2"
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (35.64950942993164, -14.016876220703125, 1.5388790369033813, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Xform "Sphere"
        {
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (0, -0.000091552734375, 115.65623474121094, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def "StaticMesh" (
            prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Door_01.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (0, -0, 120, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            over "Section0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/BP_LobbyDoor2/StaticMesh/Section0/UnrealMaterial>

                def Material "UnrealMaterial" (
                    prepend references = @Assets/Game/Materials/M_Metal_Brushed.usda@
                )
                {
                    token outputs:unreal:surface.connect = </Root/BP_LobbyDoor2/StaticMesh/Section0/UnrealMaterial/UnrealShader.outputs:out>

                    def Shader "UnrealShader"
                    {
                        uniform token info:implementationSource = "sourceAsset"
                        uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Brushed.M_Metal_Brushed@
                        token outputs:out
                    }
                }
            }

            over "Section2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/BP_LobbyDoor2/StaticMesh/Section2/UnrealMaterial>

                def Material "UnrealMaterial" (
                    prepend references = @Assets/Game/Materials/M_Glass.usda@
                )
                {
                    token outputs:unreal:surface.connect = </Root/BP_LobbyDoor2/StaticMesh/Section2/UnrealMaterial/UnrealShader.outputs:out>

                    def Shader "UnrealShader"
                    {
                        uniform token info:implementationSource = "sourceAsset"
                        uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Glass.M_Glass@
                        token outputs:out
                    }
                }
            }
        }
    }

    def "SM_Kitchen_02_Shelf" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_02_Shelf.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000006391586616083522, -0.9999999999795741, 0, 0), (0.9999999999795741, 0.000006391586616083522, 0, 0), (0, 0, 1, 0), (916.8942260742188, -454.9303283691406, 188.01812744140625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_02_Shelf/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_02_Shelf/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_02_Shelf/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_02_Shelf/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lobby_Lamp_2" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000001997370817630184, -0.9999999999980055, 0, 0), (0.9999999999980055, -0.000001997370817630184, 0, 0), (0, 0, 1, 0), (81.20703125, 845.8478393554688, 143.1703643798828, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def SphereLight "SpotLight8" (
        prepend apiSchemas = ["ShapingAPI"]
    )
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 4500
        bool inputs:enableColorTemperature = 1
        float inputs:exposure = 0
        float inputs:intensity = 80000
        float inputs:radius = 0
        float inputs:shaping:cone:angle = 50
        float inputs:shaping:cone:softness = 1
        bool treatAsPoint = 1
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000001130735612808742, -0.9848068280992955, -0.17365342302335313, 0), (-0.999999999992171, -4.5502248169349e-7, -0.000003930969834878284, 0), (0.0000037922297231041124, 0.17365342302643832, -0.9848068280921001, 0), (-386.08294677734375, 6.852001190185547, 237.089599609375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lobby_Window_2" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Window_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999940066, 0.000003462109417045141, 0, 0), (-0.000003462109417045141, -0.9999999999940066, 0, 0), (0, 0, 1, 0), (334.0299072265625, 579.1287841796875, 166.2870635986328, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lobby_Window_2/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lobby_Window_2/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Steckdosenbox_01" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Steckdosenbox_01.usda@
    )
    {
        rel material:binding = </Root/SM_Steckdosenbox_01/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (678.563232421875, -749.497802734375, 5.142548084259033, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Steckdosenbox_01/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                token outputs:out
            }
        }
    }

    def "SM_Oven_Door" (
        prepend references = @Assets/Game/Meshes/Oven/SM_Oven_Door.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.0000021305288724349225, -0.9999999999921746, 0.0000033335788569566205, 0), (0.0000062584214596261845, -0.0000033335921911792354, -0.9999999999748601, 0), (0.999999999978147, -0.000002130508008846288, 0.000006258428561278784, 0), (889.3639526367188, -405.1805725097656, 69.9163818359375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_030" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_030.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (946.9855346679688, -722.9508056640625, 23.044158935546875, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_030/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_030/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_030/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_030/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Socket_011" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_011.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (84.94390869140625, -256.46405029296875, 22.325912475585938, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_Handle14" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999812403, -0.0000061252705073353635, 0, 0), (0.0000061252705073353635, -0.9999999999812403, 0, 0), (0, 0, 1, 0), (725.9103393554688, -655.2879638671875, 77.58291625976562, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Xform "TextRenderActor2"
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.0000026654408042731153, 1.2510700225801685, 0, 0), (-1.2510700225801685, -0.0000026654408042731153, 0, 0), (0, 0, 1.2510700225830078, 0), (140.1822052001953, 5.294517517089844, 216.0618896484375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lamp_2" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (818.7125854492188, -643.9339599609375, 282.2744140625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_2/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_2/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_2/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_2/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "Cube9" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Engine/BasicShapes/Cube.usda@
    )
    {
        rel material:binding = </Root/Cube9/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (2.0814006328582764, -0, 0, 0), (0, 0.025548312813043594, -0, 0), (0, 0, 1.8233492374420166, 0), (-625.0126342773438, -254.0116424560547, 119.79235076904297, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Models/IAILab/IAIDoors/IAIDoorA/M_IAIDoorAGlass.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/Cube9/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Models/IAILab/IAIDoors/IAIDoorA/M_IAIDoorAGlass.M_IAIDoorAGlass@
                token outputs:out
            }
        }
    }

    def "SM_Kitchen_Island_Cover_4" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Island_Cover_03.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000006391586616083522, -0.9999999999795741, 0, 0), (0.8736609816372756, 0.000005584079837341262, 0, 0), (0, 0, 1, 0), (917.9650268554688, -636.7841796875, 37.344696044921875, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lift_Button_9Floor" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Button_9Floor.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-3.8444290161132812, 876.2841186523438, 185.34976196289062, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Dishwasher_Tray_03" (
        prepend references = @Assets/Game/Meshes/Dishwasher/SM_Dishwasher_Tray_03.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-2.663161091653876e-7, 0.9999999999999648, 0, 0), (-0.9999999999999648, -2.663161091653876e-7, 0, 0), (0, 0, 1, 0), (693.016845703125, -654.9375, 70.100830078125, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Heater_002" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Heater_002.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (128.39361572265625, -744.1805419921875, 111.39414978027344, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Heater_002/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Heater_002/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Window_Handle10" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (257.32720947265625, -767.52685546875, 102.31854248046875, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Retail_Door_Part4" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Retail_Door_Part2.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9396937138067949, -0.3420171402605331, -0, 0), (-0.3420171402605331, -0.9396937138067949, 0, 0), (0, 0, 1, 0), (70.352294921875, -276.2673034667969, 106.28797149658203, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_01_Drawer_01" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_01_Drawer_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000004261057743981667, -0.9999999999909218, 0, 0), (0.9999999999909218, 0.000004261057743981667, 0, 0), (0, 0, 1, 0), (912.0807495117188, -405.0665588378906, 55.525115966796875, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Living_Wall_03" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Living_Wall_03.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.9495700001716614, -760.9429931640625, 145.76800537109375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Living_Wall_03/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Living_Wall_03/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kaffeemaschine_WasserbehaelterDeckel" (
        prepend references = @Assets/Game/Meshes/Kaffeemaschine/SM_Kaffeemaschine_WasserbehaelterDeckel.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.17364083409737363, -0.9848090478534245, 0, 0), (0.9848090478534245, -0.17364083409737363, 0, 0), (0, 0, 1, 0), (917.971923828125, -568.1583251953125, 124.42121887207031, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Stove" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Stove.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002130528872212878, 0.9999999999977306, 0, 0), (-0.9999999999977306, -0.000002130528872212878, 0, 0), (0, 0, 1, 0), (695.604248046875, -420.0277404785156, 86.46656799316406, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Stove/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Stove.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Stove/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Stove.M_Stove@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Stove/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Glass_Stove.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Stove/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass_Stove.M_Glass_Stove@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_08_Sink_Drawer_01" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_08_Sink_Drawer_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-2.663161091653876e-7, 0.9999999999999648, 0, 0), (-0.9999999999999648, -2.663161091653876e-7, 0, 0), (0, 0, 1, 0), (701.042236328125, -594.514892578125, 42.51116943359375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_08_Sink_Drawer_01/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_08_Sink_Drawer_01/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_08_Sink_Drawer_01/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Kitchen_Fronts.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_08_Sink_Drawer_01/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Kitchen_Fronts.M_Kitchen_Fronts@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_08_Sink_Drawer_01/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Kitchen_Fronts.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_08_Sink_Drawer_01/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Kitchen_Fronts.M_Kitchen_Fronts@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Window_05" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_05.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-282.92413330078125, -769.546142578125, 144.88824462890625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_TV_Wandboard2" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_TV_Wandboard.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9999999999998629, 5.235987623710573e-7, 0, 0), (-5.235987623710573e-7, 0.9999999999998629, 0, 0), (0, 0, 1, 0), (-420.69268798828125, -257.6204833984375, 139.91363525390625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Vents6" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-477.88214111328125, -257.82830810546875, 254.03439331054688, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle28" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-844.8529052734375, -767.41259765625, 262.29693603515625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_017" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_017.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (542.15185546875, -256.4623107910156, 22.847061157226562, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Steckdosenbox_04" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Steckdosenbox_04.usda@
    )
    {
        rel material:binding = </Root/SM_Steckdosenbox_04/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-145.59869384765625, -749.500732421875, 5.089371204376221, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Steckdosenbox_04/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                token outputs:out
            }
        }
    }

    def "SM_Socket_001" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_001.usda@
    )
    {
        rel material:binding = </Root/SM_Socket_001/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-941.6895751953125, -682.5428466796875, 19.947059631347656, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Wall_Inst.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Socket_001/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Wall_Inst.M_Basic_Wall_Inst@
                token outputs:out
            }
        }
    }

    def "SM_Lobby_Window_Corridor" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Window_Corridor.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1.0903066396713257, 0), (961.409423828125, -136.73728942871094, 144.3949432373047, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "Elderberry_LOD0_Var13_wfzobb2ia_13" (
        prepend references = @Assets/Game/Megascans/3D_Plants/Elderberry_wfzobb2ia/Elderberry_LOD0_Var13_wfzobb2ia_13.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1.853601098060608, -0, 0, 0), (0, 1.853601098060608, -0, 0), (0, 0, 1.853601098060608, 0), (158.24847412109375, -1912.4708251953125, -39.217193603515625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def SphereLight "PointLight7"
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 6500
        bool inputs:enableColorTemperature = 0
        float inputs:exposure = 0
        float inputs:intensity = 61.89359
        float inputs:radius = 3
        bool treatAsPoint = 0
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000008763464462768766, 0.9999999999616018, 1.5700924586687032e-16, 0), (0.9999999999616018, 0.000008763464460881387, 6.879724731763504e-22, 0), (-6.879724731763504e-22, 1.5700924586687032e-16, -1.0000000000000018, 0), (545.287841796875, -640.4910888671875, 279.47711181640625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle7" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (551.084716796875, -767.41943359375, 262.36895751953125, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_06_Base_Drawer_03" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_06_Base_Drawer_03.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000004261057743981667, -0.9999999999909218, 0, 0), (0.9999999999909218, 0.000004261057743981667, 0, 0), (0, 0, 1, 0), (912.4745483398438, -615.7220458984375, 22.50745391845703, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_021" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_021.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (788.8185424804688, -256.4613342285156, 22.712188720703125, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lobby_Railings" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Railings.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-94.3125, 953.114990234375, 107.77899932861328, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Vents16" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (607.538818359375, -257.82440185546875, 253.11538696289062, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Living_Shadowbox" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Living_Shadowbox.usda@
    )
    {
        rel material:binding = </Root/SM_Living_Shadowbox/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.8899869918823242, -400.55999755859375, 215.03399658203125, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Living_Shadowbox/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                token outputs:out
            }
        }
    }

    def "SM_Schlafsofa_geschossen" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Schlafsofa_geschossen.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-455.63970947265625, -670.6893920898438, 34.3284912109375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schlafsofa_geschossen/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Fabric_Schlafsofa.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schlafsofa_geschossen/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Fabric_Schlafsofa.M_Fabric_Schlafsofa@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schlafsofa_geschossen/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schlafsofa_geschossen/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_04_Door_02" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_04_Door_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000004261057743981667, -0.9999999999909218, 0, 0), (0.9999999999909218, 0.000004261057743981667, 0, 0), (0, 0, 1, 0), (911.9557495117188, -585.725830078125, 155.45962524414062, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_012" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_012.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (100.79815673828125, -257.0210876464844, 22.133575439453125, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Xform "TextRenderActor"
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002665441566209615, 1.2510703802080372, 0, 0), (-1.2510703802080372, -0.000002665441566209615, 0, 0), (0, 0, 1.2510703802108765, 0), (139.6846160888672, 5.294460296630859, 197.6895751953125, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle13" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (2.604552984237671, -767.4095458984375, 102.35479736328125, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Ceiling_Panel_01" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Raum/SM_Ceiling_Panel_01.usda@
    )
    {
        rel material:binding = </Root/SM_Ceiling_Panel_01/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-831.9699096679688, -532.654541015625, 282.25640869140625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Ceiling_Panel_01/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                token outputs:out
            }
        }
    }

    def "SM_Kitchen_09_Base" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_09_Base.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002130528872212878, 0.9999999999977306, 0, 0), (-0.9999999999977306, -0.000002130528872212878, 0, 0), (0, 0, 1, 0), (695.934814453125, -534.538330078125, 42.149810791015625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle14" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-17.06719970703125, -767.40966796875, 102.37771606445312, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def SphereLight "PointLight14"
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 6500
        bool inputs:enableColorTemperature = 0
        float inputs:exposure = 0
        float inputs:intensity = 61.89359
        float inputs:radius = 3
        bool treatAsPoint = 0
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000008763464462768766, 0.9999999999616018, 1.5700924586687032e-16, 0), (0.9999999999616018, 0.000008763464460881387, 6.879724731763504e-22, 0), (-6.879724731763504e-22, 1.5700924586687032e-16, -1.0000000000000018, 0), (-282.19610595703125, -418.4787902832031, 279.477294921875, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def SphereLight "PointLight9"
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 6500
        bool inputs:enableColorTemperature = 0
        float inputs:exposure = 0
        float inputs:intensity = 61.89359
        float inputs:radius = 3
        bool treatAsPoint = 0
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000008763464462768766, 0.9999999999616018, 1.5700924586687032e-16, 0), (0.9999999999616018, 0.000008763464460881387, 6.879724731763504e-22, 0), (-6.879724731763504e-22, 1.5700924586687032e-16, -1.0000000000000018, 0), (269.89239501953125, -640.4920654296875, 279.47711181640625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_020" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_020.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (768.7975463867188, -256.46148681640625, 22.7154541015625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_02_Base" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_02_Base.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000006391586616083522, -0.9999999999795741, 0, 0), (0.9999999999795741, 0.000006391586616083522, 0, 0), (0, 0, 1, 0), (917.2326049804688, -454.9736633300781, 108.98194885253906, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_02_Base/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Rubber_Plastic.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_02_Base/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Rubber_Plastic.M_Rubber_Plastic@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_01_Door_01" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_01_Door_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000004261057743981667, -0.9999999999909218, 0, 0), (0.9999999999909218, 0.000004261057743981667, 0, 0), (0, 0, 1, 0), (888.7999877929688, -376.52813720703125, 171.92974853515625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_11_Base_Drawer_03" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_11_Base_Drawer_03.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002130528872212878, 0.9999999999977306, 0, 0), (-0.9999999999977306, -0.000002130528872212878, 0, 0), (0, 0, 1, 0), (701.006591796875, -419.5715637207031, 22.396690368652344, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def SphereLight "SpotLight" (
        prepend apiSchemas = ["ShapingAPI"]
    )
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 5000
        bool inputs:enableColorTemperature = 1
        float inputs:exposure = 0
        float inputs:intensity = 200000
        float inputs:radius = 0
        float inputs:shaping:cone:angle = 25
        float inputs:shaping:cone:softness = 0.19999999
        bool treatAsPoint = 1
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-4.440892098500626e-16, -1.0000000000000004, -1.5700924586837754e-16, 0), (1.0000000000000004, -4.440892098500626e-16, 0, 0), (0, -1.5700924586837754e-16, 1, 0), (-121.92201232910156, 840.3565063476562, 233.38156127929688, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_01" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (816.4357299804688, -769.542236328125, 144.88824462890625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lamp_11" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-556.8302612304688, -643.9393310546875, 282.2744140625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_11/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_11/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_11/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_11/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_11_Base_Drawer_02" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_11_Base_Drawer_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002130528872212878, 0.9999999999977306, 0, 0), (-0.9999999999977306, -0.000002130528872212878, 0, 0), (0, 0, 1, 0), (700.959716796875, -419.4708557128906, 55.64532470703125, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Floor_Number_EG2" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Floor_Number_EG.usda@
    )
    {
        rel material:binding = </Root/SM_Floor_Number_EG2/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.7819882035245028, -0.000001275568340874176, 0, 0), (0.000001275568340874176, 0.7819882035245028, 0, 0), (0, 0, 0.7819882035255432, 0), (-4.341734886169434, 841.96240234375, 226.25228881835938, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Emissive_Red.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Floor_Number_EG2/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Emissive_Red.M_Emissive_Red@
                token outputs:out
            }
        }
    }

    def "SM_Window_Handle6" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (531.990478515625, -767.6146240234375, 102.27804565429688, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }
}

